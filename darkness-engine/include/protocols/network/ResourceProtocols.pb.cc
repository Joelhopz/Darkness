// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ResourceProtocols.proto

#include "ResourceProtocols.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
class HostProcessorMessageTypeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HostProcessorMessageType>
      _instance;
} _HostProcessorMessageType_default_instance_;
class HostCoreResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HostCoreResponse>
      _instance;
} _HostCoreResponse_default_instance_;
class HostTaskImageRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HostTaskImageRequest>
      _instance;
} _HostTaskImageRequest_default_instance_;
class HostTaskImageResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HostTaskImageResponse>
      _instance;
} _HostTaskImageResponse_default_instance_;
class HostTaskModelRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HostTaskModelRequest>
      _instance;
} _HostTaskModelRequest_default_instance_;
class HostTaskModelResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HostTaskModelResponse>
      _instance;
} _HostTaskModelResponse_default_instance_;
class HostTaskStartedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HostTaskStarted>
      _instance;
} _HostTaskStarted_default_instance_;
class HostTaskFinishedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HostTaskFinished>
      _instance;
} _HostTaskFinished_default_instance_;
class HostTaskProgressDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HostTaskProgress>
      _instance;
} _HostTaskProgress_default_instance_;
class HostTaskProgressMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HostTaskProgressMessage>
      _instance;
} _HostTaskProgressMessage_default_instance_;
class ProcessorTaskMessageTypeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProcessorTaskMessageType>
      _instance;
} _ProcessorTaskMessageType_default_instance_;
class ProcessorTaskRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProcessorTaskRequest>
      _instance;
} _ProcessorTaskRequest_default_instance_;
class ProcessorTaskImageRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProcessorTaskImageRequest>
      _instance;
} _ProcessorTaskImageRequest_default_instance_;
class ProcessorTaskImageResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProcessorTaskImageResponse>
      _instance;
} _ProcessorTaskImageResponse_default_instance_;
class ProcessorTaskProgressDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProcessorTaskProgress>
      _instance;
} _ProcessorTaskProgress_default_instance_;
class ProcessorTaskMessageProgressDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProcessorTaskMessageProgress>
      _instance;
} _ProcessorTaskMessageProgress_default_instance_;
class ProcessorTaskModelRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProcessorTaskModelRequest>
      _instance;
} _ProcessorTaskModelRequest_default_instance_;
class ProcessorTaskModelResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProcessorTaskModelResponse>
      _instance;
} _ProcessorTaskModelResponse_default_instance_;
namespace protobuf_ResourceProtocols_2eproto {
void InitDefaultsHostProcessorMessageTypeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_HostProcessorMessageType_default_instance_;
    new (ptr) ::HostProcessorMessageType();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HostProcessorMessageType::InitAsDefaultInstance();
}

void InitDefaultsHostProcessorMessageType() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsHostProcessorMessageTypeImpl);
}

void InitDefaultsHostCoreResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_HostCoreResponse_default_instance_;
    new (ptr) ::HostCoreResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HostCoreResponse::InitAsDefaultInstance();
}

void InitDefaultsHostCoreResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsHostCoreResponseImpl);
}

void InitDefaultsHostTaskImageRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_HostTaskImageRequest_default_instance_;
    new (ptr) ::HostTaskImageRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HostTaskImageRequest::InitAsDefaultInstance();
}

void InitDefaultsHostTaskImageRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsHostTaskImageRequestImpl);
}

void InitDefaultsHostTaskImageResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_HostTaskImageResponse_default_instance_;
    new (ptr) ::HostTaskImageResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HostTaskImageResponse::InitAsDefaultInstance();
}

void InitDefaultsHostTaskImageResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsHostTaskImageResponseImpl);
}

void InitDefaultsHostTaskModelRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_HostTaskModelRequest_default_instance_;
    new (ptr) ::HostTaskModelRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HostTaskModelRequest::InitAsDefaultInstance();
}

void InitDefaultsHostTaskModelRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsHostTaskModelRequestImpl);
}

void InitDefaultsHostTaskModelResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_HostTaskModelResponse_default_instance_;
    new (ptr) ::HostTaskModelResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HostTaskModelResponse::InitAsDefaultInstance();
}

void InitDefaultsHostTaskModelResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsHostTaskModelResponseImpl);
}

void InitDefaultsHostTaskStartedImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_HostTaskStarted_default_instance_;
    new (ptr) ::HostTaskStarted();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HostTaskStarted::InitAsDefaultInstance();
}

void InitDefaultsHostTaskStarted() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsHostTaskStartedImpl);
}

void InitDefaultsHostTaskFinishedImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_HostTaskFinished_default_instance_;
    new (ptr) ::HostTaskFinished();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HostTaskFinished::InitAsDefaultInstance();
}

void InitDefaultsHostTaskFinished() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsHostTaskFinishedImpl);
}

void InitDefaultsHostTaskProgressImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_HostTaskProgress_default_instance_;
    new (ptr) ::HostTaskProgress();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HostTaskProgress::InitAsDefaultInstance();
}

void InitDefaultsHostTaskProgress() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsHostTaskProgressImpl);
}

void InitDefaultsHostTaskProgressMessageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_HostTaskProgressMessage_default_instance_;
    new (ptr) ::HostTaskProgressMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HostTaskProgressMessage::InitAsDefaultInstance();
}

void InitDefaultsHostTaskProgressMessage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsHostTaskProgressMessageImpl);
}

void InitDefaultsProcessorTaskMessageTypeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_ProcessorTaskMessageType_default_instance_;
    new (ptr) ::ProcessorTaskMessageType();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProcessorTaskMessageType::InitAsDefaultInstance();
}

void InitDefaultsProcessorTaskMessageType() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsProcessorTaskMessageTypeImpl);
}

void InitDefaultsProcessorTaskRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_ProcessorTaskRequest_default_instance_;
    new (ptr) ::ProcessorTaskRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProcessorTaskRequest::InitAsDefaultInstance();
}

void InitDefaultsProcessorTaskRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsProcessorTaskRequestImpl);
}

void InitDefaultsProcessorTaskImageRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_ProcessorTaskImageRequest_default_instance_;
    new (ptr) ::ProcessorTaskImageRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProcessorTaskImageRequest::InitAsDefaultInstance();
}

void InitDefaultsProcessorTaskImageRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsProcessorTaskImageRequestImpl);
}

void InitDefaultsProcessorTaskImageResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_ProcessorTaskImageResponse_default_instance_;
    new (ptr) ::ProcessorTaskImageResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProcessorTaskImageResponse::InitAsDefaultInstance();
}

void InitDefaultsProcessorTaskImageResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsProcessorTaskImageResponseImpl);
}

void InitDefaultsProcessorTaskProgressImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_ProcessorTaskProgress_default_instance_;
    new (ptr) ::ProcessorTaskProgress();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProcessorTaskProgress::InitAsDefaultInstance();
}

void InitDefaultsProcessorTaskProgress() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsProcessorTaskProgressImpl);
}

void InitDefaultsProcessorTaskMessageProgressImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_ProcessorTaskMessageProgress_default_instance_;
    new (ptr) ::ProcessorTaskMessageProgress();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProcessorTaskMessageProgress::InitAsDefaultInstance();
}

void InitDefaultsProcessorTaskMessageProgress() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsProcessorTaskMessageProgressImpl);
}

void InitDefaultsProcessorTaskModelRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_ProcessorTaskModelRequest_default_instance_;
    new (ptr) ::ProcessorTaskModelRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProcessorTaskModelRequest::InitAsDefaultInstance();
}

void InitDefaultsProcessorTaskModelRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsProcessorTaskModelRequestImpl);
}

void InitDefaultsProcessorTaskModelResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_ProcessorTaskModelResponse_default_instance_;
    new (ptr) ::ProcessorTaskModelResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProcessorTaskModelResponse::InitAsDefaultInstance();
}

void InitDefaultsProcessorTaskModelResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsProcessorTaskModelResponseImpl);
}

::google::protobuf::Metadata file_level_metadata[18];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HostProcessorMessageType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HostProcessorMessageType, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HostCoreResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HostCoreResponse, cores_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HostTaskImageRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HostTaskImageRequest, taskid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HostTaskImageRequest, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HostTaskImageRequest, format_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HostTaskImageRequest, generatemips_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HostTaskImageRequest, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HostTaskImageResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HostTaskImageResponse, taskid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HostTaskImageResponse, width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HostTaskImageResponse, height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HostTaskImageResponse, mips_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HostTaskImageResponse, format_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HostTaskImageResponse, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HostTaskModelRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HostTaskModelRequest, taskid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HostTaskModelRequest, modeltargetpath_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HostTaskModelRequest, assetname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HostTaskModelRequest, scalex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HostTaskModelRequest, scaley_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HostTaskModelRequest, scalez_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HostTaskModelRequest, rotationx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HostTaskModelRequest, rotationy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HostTaskModelRequest, rotationz_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HostTaskModelRequest, rotationw_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HostTaskModelRequest, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HostTaskModelResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HostTaskModelResponse, taskid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HostTaskModelResponse, modeldata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HostTaskModelResponse, prefabdata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HostTaskStarted, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HostTaskStarted, taskid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HostTaskFinished, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HostTaskFinished, taskid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HostTaskProgress, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HostTaskProgress, taskid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HostTaskProgress, progress_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HostTaskProgressMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HostTaskProgressMessage, taskid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HostTaskProgressMessage, progress_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HostTaskProgressMessage, message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProcessorTaskMessageType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProcessorTaskMessageType, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProcessorTaskRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProcessorTaskRequest, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProcessorTaskImageRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProcessorTaskImageRequest, taskid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProcessorTaskImageRequest, sourcecmformat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProcessorTaskImageRequest, targetcmbcformat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProcessorTaskImageRequest, enginepackedformat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProcessorTaskImageRequest, width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProcessorTaskImageRequest, height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProcessorTaskImageRequest, stride_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProcessorTaskImageRequest, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProcessorTaskImageResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProcessorTaskImageResponse, taskid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProcessorTaskImageResponse, width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProcessorTaskImageResponse, height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProcessorTaskImageResponse, format_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProcessorTaskImageResponse, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProcessorTaskProgress, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProcessorTaskProgress, taskid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProcessorTaskProgress, progress_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProcessorTaskMessageProgress, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProcessorTaskMessageProgress, taskid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProcessorTaskMessageProgress, progress_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProcessorTaskMessageProgress, message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProcessorTaskModelRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProcessorTaskModelRequest, taskid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProcessorTaskModelRequest, modeltargetpath_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProcessorTaskModelRequest, assetname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProcessorTaskModelRequest, scalex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProcessorTaskModelRequest, scaley_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProcessorTaskModelRequest, scalez_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProcessorTaskModelRequest, rotationx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProcessorTaskModelRequest, rotationy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProcessorTaskModelRequest, rotationz_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProcessorTaskModelRequest, rotationw_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProcessorTaskModelRequest, modeldata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProcessorTaskModelResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProcessorTaskModelResponse, taskid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProcessorTaskModelResponse, modeldata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProcessorTaskModelResponse, prefabdata_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::HostProcessorMessageType)},
  { 6, -1, sizeof(::HostCoreResponse)},
  { 12, -1, sizeof(::HostTaskImageRequest)},
  { 22, -1, sizeof(::HostTaskImageResponse)},
  { 33, -1, sizeof(::HostTaskModelRequest)},
  { 49, -1, sizeof(::HostTaskModelResponse)},
  { 57, -1, sizeof(::HostTaskStarted)},
  { 63, -1, sizeof(::HostTaskFinished)},
  { 69, -1, sizeof(::HostTaskProgress)},
  { 76, -1, sizeof(::HostTaskProgressMessage)},
  { 84, -1, sizeof(::ProcessorTaskMessageType)},
  { 90, -1, sizeof(::ProcessorTaskRequest)},
  { 96, -1, sizeof(::ProcessorTaskImageRequest)},
  { 109, -1, sizeof(::ProcessorTaskImageResponse)},
  { 119, -1, sizeof(::ProcessorTaskProgress)},
  { 126, -1, sizeof(::ProcessorTaskMessageProgress)},
  { 134, -1, sizeof(::ProcessorTaskModelRequest)},
  { 150, -1, sizeof(::ProcessorTaskModelResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_HostProcessorMessageType_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_HostCoreResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_HostTaskImageRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_HostTaskImageResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_HostTaskModelRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_HostTaskModelResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_HostTaskStarted_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_HostTaskFinished_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_HostTaskProgress_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_HostTaskProgressMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ProcessorTaskMessageType_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ProcessorTaskRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ProcessorTaskImageRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ProcessorTaskImageResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ProcessorTaskProgress_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ProcessorTaskMessageProgress_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ProcessorTaskModelRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ProcessorTaskModelResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "ResourceProtocols.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 18);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\027ResourceProtocols.proto\"\316\002\n\030HostProces"
      "sorMessageType\0223\n\004type\030\001 \001(\0162%.HostProce"
      "ssorMessageType.MessageType\"\374\001\n\013MessageT"
      "ype\022\013\n\007Invalid\020\000\022\017\n\013CoreRequest\020\001\022\020\n\014Cor"
      "eResponse\020\002\022\024\n\020TaskImageRequest\020\003\022\025\n\021Tas"
      "kImageResponse\020\004\022\024\n\020TaskModelRequest\020\005\022\025"
      "\n\021TaskModelResponse\020\006\022\017\n\013TaskStarted\020\007\022\020"
      "\n\014TaskFinished\020\010\022\020\n\014TaskProgress\020\t\022\027\n\023Ta"
      "skProgressMessage\020\n\022\025\n\021ShutdownProcessor"
      "\020\013\"!\n\020HostCoreResponse\022\r\n\005cores\030\001 \001(\r\"m\n"
      "\024HostTaskImageRequest\022\016\n\006taskId\030\001 \001(\t\022\021\n"
      "\textension\030\002 \001(\t\022\016\n\006format\030\003 \001(\005\022\024\n\014gene"
      "rateMips\030\004 \001(\010\022\014\n\004data\030\005 \001(\014\"r\n\025HostTask"
      "ImageResponse\022\016\n\006taskId\030\001 \001(\t\022\r\n\005width\030\002"
      " \001(\005\022\016\n\006height\030\003 \001(\005\022\014\n\004mips\030\004 \001(\005\022\016\n\006fo"
      "rmat\030\005 \001(\005\022\014\n\004data\030\006 \001(\014\"\334\001\n\024HostTaskMod"
      "elRequest\022\016\n\006taskId\030\001 \001(\t\022\027\n\017modelTarget"
      "Path\030\002 \001(\t\022\021\n\tassetName\030\003 \001(\t\022\016\n\006scaleX\030"
      "\004 \001(\002\022\016\n\006scaleY\030\005 \001(\002\022\016\n\006scaleZ\030\006 \001(\002\022\021\n"
      "\trotationX\030\007 \001(\002\022\021\n\trotationY\030\010 \001(\002\022\021\n\tr"
      "otationZ\030\t \001(\002\022\021\n\trotationW\030\n \001(\002\022\014\n\004dat"
      "a\030\013 \001(\014\"N\n\025HostTaskModelResponse\022\016\n\006task"
      "Id\030\001 \001(\t\022\021\n\tmodelData\030\002 \001(\014\022\022\n\nprefabDat"
      "a\030\003 \001(\014\"!\n\017HostTaskStarted\022\016\n\006taskId\030\001 \001"
      "(\t\"\"\n\020HostTaskFinished\022\016\n\006taskId\030\001 \001(\t\"4"
      "\n\020HostTaskProgress\022\016\n\006taskId\030\001 \001(\t\022\020\n\010pr"
      "ogress\030\002 \001(\002\"L\n\027HostTaskProgressMessage\022"
      "\016\n\006taskId\030\001 \001(\t\022\020\n\010progress\030\002 \001(\002\022\017\n\007mes"
      "sage\030\003 \001(\t\"\347\001\n\030ProcessorTaskMessageType\022"
      "3\n\004type\030\001 \001(\0162%.ProcessorTaskMessageType"
      ".MessageType\"\225\001\n\013MessageType\022\013\n\007Invalid\020"
      "\000\022\010\n\004Helo\020\001\022\017\n\013TaskRequest\020\002\022\020\n\014TaskResp"
      "onse\020\003\022\020\n\014TaskProgress\020\004\022\027\n\023TaskProgress"
      "Message\020\005\022\017\n\013DoneRequest\020\006\022\020\n\014DoneRespon"
      "se\020\007\"s\n\024ProcessorTaskRequest\022,\n\004type\030\001 \001"
      "(\0162\036.ProcessorTaskRequest.TaskType\"-\n\010Ta"
      "skType\022\013\n\007Invalid\020\000\022\t\n\005Image\020\001\022\t\n\005Model\020"
      "\002\"\266\001\n\031ProcessorTaskImageRequest\022\016\n\006taskI"
      "d\030\001 \001(\t\022\026\n\016sourceCMformat\030\002 \001(\005\022\030\n\020targe"
      "tCMBCformat\030\003 \001(\005\022\032\n\022enginePackedFormat\030"
      "\004 \001(\005\022\r\n\005width\030\005 \001(\005\022\016\n\006height\030\006 \001(\005\022\016\n\006"
      "stride\030\007 \001(\005\022\014\n\004data\030\010 \001(\014\"i\n\032ProcessorT"
      "askImageResponse\022\016\n\006taskId\030\001 \001(\t\022\r\n\005widt"
      "h\030\002 \001(\005\022\016\n\006height\030\003 \001(\005\022\016\n\006format\030\004 \001(\005\022"
      "\014\n\004data\030\005 \001(\014\"9\n\025ProcessorTaskProgress\022\016"
      "\n\006taskId\030\001 \001(\t\022\020\n\010progress\030\002 \001(\002\"Q\n\034Proc"
      "essorTaskMessageProgress\022\016\n\006taskId\030\001 \001(\t"
      "\022\020\n\010progress\030\002 \001(\002\022\017\n\007message\030\003 \001(\t\"\346\001\n\031"
      "ProcessorTaskModelRequest\022\016\n\006taskId\030\001 \001("
      "\t\022\027\n\017modelTargetPath\030\002 \001(\t\022\021\n\tassetName\030"
      "\003 \001(\t\022\016\n\006scaleX\030\004 \001(\002\022\016\n\006scaleY\030\005 \001(\002\022\016\n"
      "\006scaleZ\030\006 \001(\002\022\021\n\trotationX\030\007 \001(\002\022\021\n\trota"
      "tionY\030\010 \001(\002\022\021\n\trotationZ\030\t \001(\002\022\021\n\trotati"
      "onW\030\n \001(\002\022\021\n\tmodelData\030\013 \001(\014\"S\n\032Processo"
      "rTaskModelResponse\022\016\n\006taskId\030\001 \001(\t\022\021\n\tmo"
      "delData\030\002 \001(\014\022\022\n\nprefabData\030\003 \001(\014b\006proto"
      "3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2241);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ResourceProtocols.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_ResourceProtocols_2eproto
const ::google::protobuf::EnumDescriptor* HostProcessorMessageType_MessageType_descriptor() {
  protobuf_ResourceProtocols_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ResourceProtocols_2eproto::file_level_enum_descriptors[0];
}
bool HostProcessorMessageType_MessageType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const HostProcessorMessageType_MessageType HostProcessorMessageType::Invalid;
const HostProcessorMessageType_MessageType HostProcessorMessageType::CoreRequest;
const HostProcessorMessageType_MessageType HostProcessorMessageType::CoreResponse;
const HostProcessorMessageType_MessageType HostProcessorMessageType::TaskImageRequest;
const HostProcessorMessageType_MessageType HostProcessorMessageType::TaskImageResponse;
const HostProcessorMessageType_MessageType HostProcessorMessageType::TaskModelRequest;
const HostProcessorMessageType_MessageType HostProcessorMessageType::TaskModelResponse;
const HostProcessorMessageType_MessageType HostProcessorMessageType::TaskStarted;
const HostProcessorMessageType_MessageType HostProcessorMessageType::TaskFinished;
const HostProcessorMessageType_MessageType HostProcessorMessageType::TaskProgress;
const HostProcessorMessageType_MessageType HostProcessorMessageType::TaskProgressMessage;
const HostProcessorMessageType_MessageType HostProcessorMessageType::ShutdownProcessor;
const HostProcessorMessageType_MessageType HostProcessorMessageType::MessageType_MIN;
const HostProcessorMessageType_MessageType HostProcessorMessageType::MessageType_MAX;
const int HostProcessorMessageType::MessageType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ProcessorTaskMessageType_MessageType_descriptor() {
  protobuf_ResourceProtocols_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ResourceProtocols_2eproto::file_level_enum_descriptors[1];
}
bool ProcessorTaskMessageType_MessageType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ProcessorTaskMessageType_MessageType ProcessorTaskMessageType::Invalid;
const ProcessorTaskMessageType_MessageType ProcessorTaskMessageType::Helo;
const ProcessorTaskMessageType_MessageType ProcessorTaskMessageType::TaskRequest;
const ProcessorTaskMessageType_MessageType ProcessorTaskMessageType::TaskResponse;
const ProcessorTaskMessageType_MessageType ProcessorTaskMessageType::TaskProgress;
const ProcessorTaskMessageType_MessageType ProcessorTaskMessageType::TaskProgressMessage;
const ProcessorTaskMessageType_MessageType ProcessorTaskMessageType::DoneRequest;
const ProcessorTaskMessageType_MessageType ProcessorTaskMessageType::DoneResponse;
const ProcessorTaskMessageType_MessageType ProcessorTaskMessageType::MessageType_MIN;
const ProcessorTaskMessageType_MessageType ProcessorTaskMessageType::MessageType_MAX;
const int ProcessorTaskMessageType::MessageType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ProcessorTaskRequest_TaskType_descriptor() {
  protobuf_ResourceProtocols_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ResourceProtocols_2eproto::file_level_enum_descriptors[2];
}
bool ProcessorTaskRequest_TaskType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ProcessorTaskRequest_TaskType ProcessorTaskRequest::Invalid;
const ProcessorTaskRequest_TaskType ProcessorTaskRequest::Image;
const ProcessorTaskRequest_TaskType ProcessorTaskRequest::Model;
const ProcessorTaskRequest_TaskType ProcessorTaskRequest::TaskType_MIN;
const ProcessorTaskRequest_TaskType ProcessorTaskRequest::TaskType_MAX;
const int ProcessorTaskRequest::TaskType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void HostProcessorMessageType::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HostProcessorMessageType::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HostProcessorMessageType::HostProcessorMessageType()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ResourceProtocols_2eproto::InitDefaultsHostProcessorMessageType();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:HostProcessorMessageType)
}
HostProcessorMessageType::HostProcessorMessageType(const HostProcessorMessageType& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:HostProcessorMessageType)
}

void HostProcessorMessageType::SharedCtor() {
  type_ = 0;
  _cached_size_ = 0;
}

HostProcessorMessageType::~HostProcessorMessageType() {
  // @@protoc_insertion_point(destructor:HostProcessorMessageType)
  SharedDtor();
}

void HostProcessorMessageType::SharedDtor() {
}

void HostProcessorMessageType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HostProcessorMessageType::descriptor() {
  ::protobuf_ResourceProtocols_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ResourceProtocols_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HostProcessorMessageType& HostProcessorMessageType::default_instance() {
  ::protobuf_ResourceProtocols_2eproto::InitDefaultsHostProcessorMessageType();
  return *internal_default_instance();
}

HostProcessorMessageType* HostProcessorMessageType::New(::google::protobuf::Arena* arena) const {
  HostProcessorMessageType* n = new HostProcessorMessageType;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HostProcessorMessageType::Clear() {
// @@protoc_insertion_point(message_clear_start:HostProcessorMessageType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_ = 0;
  _internal_metadata_.Clear();
}

bool HostProcessorMessageType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HostProcessorMessageType)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .HostProcessorMessageType.MessageType type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::HostProcessorMessageType_MessageType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HostProcessorMessageType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HostProcessorMessageType)
  return false;
#undef DO_
}

void HostProcessorMessageType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HostProcessorMessageType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .HostProcessorMessageType.MessageType type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HostProcessorMessageType)
}

::google::protobuf::uint8* HostProcessorMessageType::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HostProcessorMessageType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .HostProcessorMessageType.MessageType type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HostProcessorMessageType)
  return target;
}

size_t HostProcessorMessageType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HostProcessorMessageType)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .HostProcessorMessageType.MessageType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HostProcessorMessageType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HostProcessorMessageType)
  GOOGLE_DCHECK_NE(&from, this);
  const HostProcessorMessageType* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HostProcessorMessageType>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HostProcessorMessageType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HostProcessorMessageType)
    MergeFrom(*source);
  }
}

void HostProcessorMessageType::MergeFrom(const HostProcessorMessageType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HostProcessorMessageType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type() != 0) {
    set_type(from.type());
  }
}

void HostProcessorMessageType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HostProcessorMessageType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HostProcessorMessageType::CopyFrom(const HostProcessorMessageType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HostProcessorMessageType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HostProcessorMessageType::IsInitialized() const {
  return true;
}

void HostProcessorMessageType::Swap(HostProcessorMessageType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HostProcessorMessageType::InternalSwap(HostProcessorMessageType* other) {
  using std::swap;
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HostProcessorMessageType::GetMetadata() const {
  protobuf_ResourceProtocols_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ResourceProtocols_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HostCoreResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HostCoreResponse::kCoresFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HostCoreResponse::HostCoreResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ResourceProtocols_2eproto::InitDefaultsHostCoreResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:HostCoreResponse)
}
HostCoreResponse::HostCoreResponse(const HostCoreResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cores_ = from.cores_;
  // @@protoc_insertion_point(copy_constructor:HostCoreResponse)
}

void HostCoreResponse::SharedCtor() {
  cores_ = 0u;
  _cached_size_ = 0;
}

HostCoreResponse::~HostCoreResponse() {
  // @@protoc_insertion_point(destructor:HostCoreResponse)
  SharedDtor();
}

void HostCoreResponse::SharedDtor() {
}

void HostCoreResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HostCoreResponse::descriptor() {
  ::protobuf_ResourceProtocols_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ResourceProtocols_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HostCoreResponse& HostCoreResponse::default_instance() {
  ::protobuf_ResourceProtocols_2eproto::InitDefaultsHostCoreResponse();
  return *internal_default_instance();
}

HostCoreResponse* HostCoreResponse::New(::google::protobuf::Arena* arena) const {
  HostCoreResponse* n = new HostCoreResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HostCoreResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:HostCoreResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cores_ = 0u;
  _internal_metadata_.Clear();
}

bool HostCoreResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HostCoreResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 cores = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cores_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HostCoreResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HostCoreResponse)
  return false;
#undef DO_
}

void HostCoreResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HostCoreResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 cores = 1;
  if (this->cores() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->cores(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HostCoreResponse)
}

::google::protobuf::uint8* HostCoreResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HostCoreResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 cores = 1;
  if (this->cores() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->cores(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HostCoreResponse)
  return target;
}

size_t HostCoreResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HostCoreResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 cores = 1;
  if (this->cores() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cores());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HostCoreResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HostCoreResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const HostCoreResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HostCoreResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HostCoreResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HostCoreResponse)
    MergeFrom(*source);
  }
}

void HostCoreResponse::MergeFrom(const HostCoreResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HostCoreResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cores() != 0) {
    set_cores(from.cores());
  }
}

void HostCoreResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HostCoreResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HostCoreResponse::CopyFrom(const HostCoreResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HostCoreResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HostCoreResponse::IsInitialized() const {
  return true;
}

void HostCoreResponse::Swap(HostCoreResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HostCoreResponse::InternalSwap(HostCoreResponse* other) {
  using std::swap;
  swap(cores_, other->cores_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HostCoreResponse::GetMetadata() const {
  protobuf_ResourceProtocols_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ResourceProtocols_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HostTaskImageRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HostTaskImageRequest::kTaskIdFieldNumber;
const int HostTaskImageRequest::kExtensionFieldNumber;
const int HostTaskImageRequest::kFormatFieldNumber;
const int HostTaskImageRequest::kGenerateMipsFieldNumber;
const int HostTaskImageRequest::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HostTaskImageRequest::HostTaskImageRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ResourceProtocols_2eproto::InitDefaultsHostTaskImageRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:HostTaskImageRequest)
}
HostTaskImageRequest::HostTaskImageRequest(const HostTaskImageRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  taskid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.taskid().size() > 0) {
    taskid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.taskid_);
  }
  extension_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.extension().size() > 0) {
    extension_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extension_);
  }
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  ::memcpy(&format_, &from.format_,
    static_cast<size_t>(reinterpret_cast<char*>(&generatemips_) -
    reinterpret_cast<char*>(&format_)) + sizeof(generatemips_));
  // @@protoc_insertion_point(copy_constructor:HostTaskImageRequest)
}

void HostTaskImageRequest::SharedCtor() {
  taskid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extension_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&format_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&generatemips_) -
      reinterpret_cast<char*>(&format_)) + sizeof(generatemips_));
  _cached_size_ = 0;
}

HostTaskImageRequest::~HostTaskImageRequest() {
  // @@protoc_insertion_point(destructor:HostTaskImageRequest)
  SharedDtor();
}

void HostTaskImageRequest::SharedDtor() {
  taskid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extension_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HostTaskImageRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HostTaskImageRequest::descriptor() {
  ::protobuf_ResourceProtocols_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ResourceProtocols_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HostTaskImageRequest& HostTaskImageRequest::default_instance() {
  ::protobuf_ResourceProtocols_2eproto::InitDefaultsHostTaskImageRequest();
  return *internal_default_instance();
}

HostTaskImageRequest* HostTaskImageRequest::New(::google::protobuf::Arena* arena) const {
  HostTaskImageRequest* n = new HostTaskImageRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HostTaskImageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:HostTaskImageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  taskid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extension_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&format_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&generatemips_) -
      reinterpret_cast<char*>(&format_)) + sizeof(generatemips_));
  _internal_metadata_.Clear();
}

bool HostTaskImageRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HostTaskImageRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string taskId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_taskid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->taskid().data(), static_cast<int>(this->taskid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HostTaskImageRequest.taskId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extension()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->extension().data(), static_cast<int>(this->extension().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HostTaskImageRequest.extension"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 format = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &format_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool generateMips = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &generatemips_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes data = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HostTaskImageRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HostTaskImageRequest)
  return false;
#undef DO_
}

void HostTaskImageRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HostTaskImageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string taskId = 1;
  if (this->taskid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->taskid().data(), static_cast<int>(this->taskid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HostTaskImageRequest.taskId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->taskid(), output);
  }

  // string extension = 2;
  if (this->extension().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extension().data(), static_cast<int>(this->extension().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HostTaskImageRequest.extension");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->extension(), output);
  }

  // int32 format = 3;
  if (this->format() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->format(), output);
  }

  // bool generateMips = 4;
  if (this->generatemips() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->generatemips(), output);
  }

  // bytes data = 5;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HostTaskImageRequest)
}

::google::protobuf::uint8* HostTaskImageRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HostTaskImageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string taskId = 1;
  if (this->taskid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->taskid().data(), static_cast<int>(this->taskid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HostTaskImageRequest.taskId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->taskid(), target);
  }

  // string extension = 2;
  if (this->extension().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extension().data(), static_cast<int>(this->extension().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HostTaskImageRequest.extension");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->extension(), target);
  }

  // int32 format = 3;
  if (this->format() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->format(), target);
  }

  // bool generateMips = 4;
  if (this->generatemips() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->generatemips(), target);
  }

  // bytes data = 5;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HostTaskImageRequest)
  return target;
}

size_t HostTaskImageRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HostTaskImageRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string taskId = 1;
  if (this->taskid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->taskid());
  }

  // string extension = 2;
  if (this->extension().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->extension());
  }

  // bytes data = 5;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  // int32 format = 3;
  if (this->format() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->format());
  }

  // bool generateMips = 4;
  if (this->generatemips() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HostTaskImageRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HostTaskImageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const HostTaskImageRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HostTaskImageRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HostTaskImageRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HostTaskImageRequest)
    MergeFrom(*source);
  }
}

void HostTaskImageRequest::MergeFrom(const HostTaskImageRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HostTaskImageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.taskid().size() > 0) {

    taskid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.taskid_);
  }
  if (from.extension().size() > 0) {

    extension_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extension_);
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.format() != 0) {
    set_format(from.format());
  }
  if (from.generatemips() != 0) {
    set_generatemips(from.generatemips());
  }
}

void HostTaskImageRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HostTaskImageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HostTaskImageRequest::CopyFrom(const HostTaskImageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HostTaskImageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HostTaskImageRequest::IsInitialized() const {
  return true;
}

void HostTaskImageRequest::Swap(HostTaskImageRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HostTaskImageRequest::InternalSwap(HostTaskImageRequest* other) {
  using std::swap;
  taskid_.Swap(&other->taskid_);
  extension_.Swap(&other->extension_);
  data_.Swap(&other->data_);
  swap(format_, other->format_);
  swap(generatemips_, other->generatemips_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HostTaskImageRequest::GetMetadata() const {
  protobuf_ResourceProtocols_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ResourceProtocols_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HostTaskImageResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HostTaskImageResponse::kTaskIdFieldNumber;
const int HostTaskImageResponse::kWidthFieldNumber;
const int HostTaskImageResponse::kHeightFieldNumber;
const int HostTaskImageResponse::kMipsFieldNumber;
const int HostTaskImageResponse::kFormatFieldNumber;
const int HostTaskImageResponse::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HostTaskImageResponse::HostTaskImageResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ResourceProtocols_2eproto::InitDefaultsHostTaskImageResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:HostTaskImageResponse)
}
HostTaskImageResponse::HostTaskImageResponse(const HostTaskImageResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  taskid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.taskid().size() > 0) {
    taskid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.taskid_);
  }
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  ::memcpy(&width_, &from.width_,
    static_cast<size_t>(reinterpret_cast<char*>(&format_) -
    reinterpret_cast<char*>(&width_)) + sizeof(format_));
  // @@protoc_insertion_point(copy_constructor:HostTaskImageResponse)
}

void HostTaskImageResponse::SharedCtor() {
  taskid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&width_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&format_) -
      reinterpret_cast<char*>(&width_)) + sizeof(format_));
  _cached_size_ = 0;
}

HostTaskImageResponse::~HostTaskImageResponse() {
  // @@protoc_insertion_point(destructor:HostTaskImageResponse)
  SharedDtor();
}

void HostTaskImageResponse::SharedDtor() {
  taskid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HostTaskImageResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HostTaskImageResponse::descriptor() {
  ::protobuf_ResourceProtocols_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ResourceProtocols_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HostTaskImageResponse& HostTaskImageResponse::default_instance() {
  ::protobuf_ResourceProtocols_2eproto::InitDefaultsHostTaskImageResponse();
  return *internal_default_instance();
}

HostTaskImageResponse* HostTaskImageResponse::New(::google::protobuf::Arena* arena) const {
  HostTaskImageResponse* n = new HostTaskImageResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HostTaskImageResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:HostTaskImageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  taskid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&width_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&format_) -
      reinterpret_cast<char*>(&width_)) + sizeof(format_));
  _internal_metadata_.Clear();
}

bool HostTaskImageResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HostTaskImageResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string taskId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_taskid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->taskid().data(), static_cast<int>(this->taskid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HostTaskImageResponse.taskId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 width = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 height = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 mips = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mips_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 format = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &format_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes data = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HostTaskImageResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HostTaskImageResponse)
  return false;
#undef DO_
}

void HostTaskImageResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HostTaskImageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string taskId = 1;
  if (this->taskid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->taskid().data(), static_cast<int>(this->taskid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HostTaskImageResponse.taskId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->taskid(), output);
  }

  // int32 width = 2;
  if (this->width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->width(), output);
  }

  // int32 height = 3;
  if (this->height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->height(), output);
  }

  // int32 mips = 4;
  if (this->mips() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->mips(), output);
  }

  // int32 format = 5;
  if (this->format() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->format(), output);
  }

  // bytes data = 6;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HostTaskImageResponse)
}

::google::protobuf::uint8* HostTaskImageResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HostTaskImageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string taskId = 1;
  if (this->taskid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->taskid().data(), static_cast<int>(this->taskid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HostTaskImageResponse.taskId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->taskid(), target);
  }

  // int32 width = 2;
  if (this->width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->width(), target);
  }

  // int32 height = 3;
  if (this->height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->height(), target);
  }

  // int32 mips = 4;
  if (this->mips() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->mips(), target);
  }

  // int32 format = 5;
  if (this->format() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->format(), target);
  }

  // bytes data = 6;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HostTaskImageResponse)
  return target;
}

size_t HostTaskImageResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HostTaskImageResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string taskId = 1;
  if (this->taskid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->taskid());
  }

  // bytes data = 6;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  // int32 width = 2;
  if (this->width() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->width());
  }

  // int32 height = 3;
  if (this->height() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->height());
  }

  // int32 mips = 4;
  if (this->mips() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mips());
  }

  // int32 format = 5;
  if (this->format() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->format());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HostTaskImageResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HostTaskImageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const HostTaskImageResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HostTaskImageResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HostTaskImageResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HostTaskImageResponse)
    MergeFrom(*source);
  }
}

void HostTaskImageResponse::MergeFrom(const HostTaskImageResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HostTaskImageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.taskid().size() > 0) {

    taskid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.taskid_);
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.width() != 0) {
    set_width(from.width());
  }
  if (from.height() != 0) {
    set_height(from.height());
  }
  if (from.mips() != 0) {
    set_mips(from.mips());
  }
  if (from.format() != 0) {
    set_format(from.format());
  }
}

void HostTaskImageResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HostTaskImageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HostTaskImageResponse::CopyFrom(const HostTaskImageResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HostTaskImageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HostTaskImageResponse::IsInitialized() const {
  return true;
}

void HostTaskImageResponse::Swap(HostTaskImageResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HostTaskImageResponse::InternalSwap(HostTaskImageResponse* other) {
  using std::swap;
  taskid_.Swap(&other->taskid_);
  data_.Swap(&other->data_);
  swap(width_, other->width_);
  swap(height_, other->height_);
  swap(mips_, other->mips_);
  swap(format_, other->format_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HostTaskImageResponse::GetMetadata() const {
  protobuf_ResourceProtocols_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ResourceProtocols_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HostTaskModelRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HostTaskModelRequest::kTaskIdFieldNumber;
const int HostTaskModelRequest::kModelTargetPathFieldNumber;
const int HostTaskModelRequest::kAssetNameFieldNumber;
const int HostTaskModelRequest::kScaleXFieldNumber;
const int HostTaskModelRequest::kScaleYFieldNumber;
const int HostTaskModelRequest::kScaleZFieldNumber;
const int HostTaskModelRequest::kRotationXFieldNumber;
const int HostTaskModelRequest::kRotationYFieldNumber;
const int HostTaskModelRequest::kRotationZFieldNumber;
const int HostTaskModelRequest::kRotationWFieldNumber;
const int HostTaskModelRequest::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HostTaskModelRequest::HostTaskModelRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ResourceProtocols_2eproto::InitDefaultsHostTaskModelRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:HostTaskModelRequest)
}
HostTaskModelRequest::HostTaskModelRequest(const HostTaskModelRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  taskid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.taskid().size() > 0) {
    taskid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.taskid_);
  }
  modeltargetpath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.modeltargetpath().size() > 0) {
    modeltargetpath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.modeltargetpath_);
  }
  assetname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.assetname().size() > 0) {
    assetname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.assetname_);
  }
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  ::memcpy(&scalex_, &from.scalex_,
    static_cast<size_t>(reinterpret_cast<char*>(&rotationw_) -
    reinterpret_cast<char*>(&scalex_)) + sizeof(rotationw_));
  // @@protoc_insertion_point(copy_constructor:HostTaskModelRequest)
}

void HostTaskModelRequest::SharedCtor() {
  taskid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  modeltargetpath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  assetname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&scalex_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rotationw_) -
      reinterpret_cast<char*>(&scalex_)) + sizeof(rotationw_));
  _cached_size_ = 0;
}

HostTaskModelRequest::~HostTaskModelRequest() {
  // @@protoc_insertion_point(destructor:HostTaskModelRequest)
  SharedDtor();
}

void HostTaskModelRequest::SharedDtor() {
  taskid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  modeltargetpath_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  assetname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HostTaskModelRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HostTaskModelRequest::descriptor() {
  ::protobuf_ResourceProtocols_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ResourceProtocols_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HostTaskModelRequest& HostTaskModelRequest::default_instance() {
  ::protobuf_ResourceProtocols_2eproto::InitDefaultsHostTaskModelRequest();
  return *internal_default_instance();
}

HostTaskModelRequest* HostTaskModelRequest::New(::google::protobuf::Arena* arena) const {
  HostTaskModelRequest* n = new HostTaskModelRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HostTaskModelRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:HostTaskModelRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  taskid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  modeltargetpath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  assetname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&scalex_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rotationw_) -
      reinterpret_cast<char*>(&scalex_)) + sizeof(rotationw_));
  _internal_metadata_.Clear();
}

bool HostTaskModelRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HostTaskModelRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string taskId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_taskid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->taskid().data(), static_cast<int>(this->taskid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HostTaskModelRequest.taskId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string modelTargetPath = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_modeltargetpath()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->modeltargetpath().data(), static_cast<int>(this->modeltargetpath().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HostTaskModelRequest.modelTargetPath"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string assetName = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_assetname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->assetname().data(), static_cast<int>(this->assetname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HostTaskModelRequest.assetName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float scaleX = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &scalex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float scaleY = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &scaley_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float scaleZ = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &scalez_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float rotationX = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &rotationx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float rotationY = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(69u /* 69 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &rotationy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float rotationZ = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &rotationz_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float rotationW = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(85u /* 85 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &rotationw_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes data = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HostTaskModelRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HostTaskModelRequest)
  return false;
#undef DO_
}

void HostTaskModelRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HostTaskModelRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string taskId = 1;
  if (this->taskid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->taskid().data(), static_cast<int>(this->taskid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HostTaskModelRequest.taskId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->taskid(), output);
  }

  // string modelTargetPath = 2;
  if (this->modeltargetpath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->modeltargetpath().data(), static_cast<int>(this->modeltargetpath().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HostTaskModelRequest.modelTargetPath");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->modeltargetpath(), output);
  }

  // string assetName = 3;
  if (this->assetname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->assetname().data(), static_cast<int>(this->assetname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HostTaskModelRequest.assetName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->assetname(), output);
  }

  // float scaleX = 4;
  if (this->scalex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->scalex(), output);
  }

  // float scaleY = 5;
  if (this->scaley() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->scaley(), output);
  }

  // float scaleZ = 6;
  if (this->scalez() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->scalez(), output);
  }

  // float rotationX = 7;
  if (this->rotationx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->rotationx(), output);
  }

  // float rotationY = 8;
  if (this->rotationy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->rotationy(), output);
  }

  // float rotationZ = 9;
  if (this->rotationz() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->rotationz(), output);
  }

  // float rotationW = 10;
  if (this->rotationw() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(10, this->rotationw(), output);
  }

  // bytes data = 11;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      11, this->data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HostTaskModelRequest)
}

::google::protobuf::uint8* HostTaskModelRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HostTaskModelRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string taskId = 1;
  if (this->taskid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->taskid().data(), static_cast<int>(this->taskid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HostTaskModelRequest.taskId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->taskid(), target);
  }

  // string modelTargetPath = 2;
  if (this->modeltargetpath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->modeltargetpath().data(), static_cast<int>(this->modeltargetpath().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HostTaskModelRequest.modelTargetPath");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->modeltargetpath(), target);
  }

  // string assetName = 3;
  if (this->assetname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->assetname().data(), static_cast<int>(this->assetname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HostTaskModelRequest.assetName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->assetname(), target);
  }

  // float scaleX = 4;
  if (this->scalex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->scalex(), target);
  }

  // float scaleY = 5;
  if (this->scaley() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->scaley(), target);
  }

  // float scaleZ = 6;
  if (this->scalez() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->scalez(), target);
  }

  // float rotationX = 7;
  if (this->rotationx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->rotationx(), target);
  }

  // float rotationY = 8;
  if (this->rotationy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->rotationy(), target);
  }

  // float rotationZ = 9;
  if (this->rotationz() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->rotationz(), target);
  }

  // float rotationW = 10;
  if (this->rotationw() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(10, this->rotationw(), target);
  }

  // bytes data = 11;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        11, this->data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HostTaskModelRequest)
  return target;
}

size_t HostTaskModelRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HostTaskModelRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string taskId = 1;
  if (this->taskid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->taskid());
  }

  // string modelTargetPath = 2;
  if (this->modeltargetpath().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->modeltargetpath());
  }

  // string assetName = 3;
  if (this->assetname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->assetname());
  }

  // bytes data = 11;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  // float scaleX = 4;
  if (this->scalex() != 0) {
    total_size += 1 + 4;
  }

  // float scaleY = 5;
  if (this->scaley() != 0) {
    total_size += 1 + 4;
  }

  // float scaleZ = 6;
  if (this->scalez() != 0) {
    total_size += 1 + 4;
  }

  // float rotationX = 7;
  if (this->rotationx() != 0) {
    total_size += 1 + 4;
  }

  // float rotationY = 8;
  if (this->rotationy() != 0) {
    total_size += 1 + 4;
  }

  // float rotationZ = 9;
  if (this->rotationz() != 0) {
    total_size += 1 + 4;
  }

  // float rotationW = 10;
  if (this->rotationw() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HostTaskModelRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HostTaskModelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const HostTaskModelRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HostTaskModelRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HostTaskModelRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HostTaskModelRequest)
    MergeFrom(*source);
  }
}

void HostTaskModelRequest::MergeFrom(const HostTaskModelRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HostTaskModelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.taskid().size() > 0) {

    taskid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.taskid_);
  }
  if (from.modeltargetpath().size() > 0) {

    modeltargetpath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.modeltargetpath_);
  }
  if (from.assetname().size() > 0) {

    assetname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.assetname_);
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.scalex() != 0) {
    set_scalex(from.scalex());
  }
  if (from.scaley() != 0) {
    set_scaley(from.scaley());
  }
  if (from.scalez() != 0) {
    set_scalez(from.scalez());
  }
  if (from.rotationx() != 0) {
    set_rotationx(from.rotationx());
  }
  if (from.rotationy() != 0) {
    set_rotationy(from.rotationy());
  }
  if (from.rotationz() != 0) {
    set_rotationz(from.rotationz());
  }
  if (from.rotationw() != 0) {
    set_rotationw(from.rotationw());
  }
}

void HostTaskModelRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HostTaskModelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HostTaskModelRequest::CopyFrom(const HostTaskModelRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HostTaskModelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HostTaskModelRequest::IsInitialized() const {
  return true;
}

void HostTaskModelRequest::Swap(HostTaskModelRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HostTaskModelRequest::InternalSwap(HostTaskModelRequest* other) {
  using std::swap;
  taskid_.Swap(&other->taskid_);
  modeltargetpath_.Swap(&other->modeltargetpath_);
  assetname_.Swap(&other->assetname_);
  data_.Swap(&other->data_);
  swap(scalex_, other->scalex_);
  swap(scaley_, other->scaley_);
  swap(scalez_, other->scalez_);
  swap(rotationx_, other->rotationx_);
  swap(rotationy_, other->rotationy_);
  swap(rotationz_, other->rotationz_);
  swap(rotationw_, other->rotationw_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HostTaskModelRequest::GetMetadata() const {
  protobuf_ResourceProtocols_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ResourceProtocols_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HostTaskModelResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HostTaskModelResponse::kTaskIdFieldNumber;
const int HostTaskModelResponse::kModelDataFieldNumber;
const int HostTaskModelResponse::kPrefabDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HostTaskModelResponse::HostTaskModelResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ResourceProtocols_2eproto::InitDefaultsHostTaskModelResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:HostTaskModelResponse)
}
HostTaskModelResponse::HostTaskModelResponse(const HostTaskModelResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  taskid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.taskid().size() > 0) {
    taskid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.taskid_);
  }
  modeldata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.modeldata().size() > 0) {
    modeldata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.modeldata_);
  }
  prefabdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.prefabdata().size() > 0) {
    prefabdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prefabdata_);
  }
  // @@protoc_insertion_point(copy_constructor:HostTaskModelResponse)
}

void HostTaskModelResponse::SharedCtor() {
  taskid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  modeldata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prefabdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

HostTaskModelResponse::~HostTaskModelResponse() {
  // @@protoc_insertion_point(destructor:HostTaskModelResponse)
  SharedDtor();
}

void HostTaskModelResponse::SharedDtor() {
  taskid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  modeldata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prefabdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HostTaskModelResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HostTaskModelResponse::descriptor() {
  ::protobuf_ResourceProtocols_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ResourceProtocols_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HostTaskModelResponse& HostTaskModelResponse::default_instance() {
  ::protobuf_ResourceProtocols_2eproto::InitDefaultsHostTaskModelResponse();
  return *internal_default_instance();
}

HostTaskModelResponse* HostTaskModelResponse::New(::google::protobuf::Arena* arena) const {
  HostTaskModelResponse* n = new HostTaskModelResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HostTaskModelResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:HostTaskModelResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  taskid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  modeldata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prefabdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool HostTaskModelResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HostTaskModelResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string taskId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_taskid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->taskid().data(), static_cast<int>(this->taskid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HostTaskModelResponse.taskId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes modelData = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_modeldata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes prefabData = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_prefabdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HostTaskModelResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HostTaskModelResponse)
  return false;
#undef DO_
}

void HostTaskModelResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HostTaskModelResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string taskId = 1;
  if (this->taskid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->taskid().data(), static_cast<int>(this->taskid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HostTaskModelResponse.taskId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->taskid(), output);
  }

  // bytes modelData = 2;
  if (this->modeldata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->modeldata(), output);
  }

  // bytes prefabData = 3;
  if (this->prefabdata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->prefabdata(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HostTaskModelResponse)
}

::google::protobuf::uint8* HostTaskModelResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HostTaskModelResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string taskId = 1;
  if (this->taskid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->taskid().data(), static_cast<int>(this->taskid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HostTaskModelResponse.taskId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->taskid(), target);
  }

  // bytes modelData = 2;
  if (this->modeldata().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->modeldata(), target);
  }

  // bytes prefabData = 3;
  if (this->prefabdata().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->prefabdata(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HostTaskModelResponse)
  return target;
}

size_t HostTaskModelResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HostTaskModelResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string taskId = 1;
  if (this->taskid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->taskid());
  }

  // bytes modelData = 2;
  if (this->modeldata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->modeldata());
  }

  // bytes prefabData = 3;
  if (this->prefabdata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->prefabdata());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HostTaskModelResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HostTaskModelResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const HostTaskModelResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HostTaskModelResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HostTaskModelResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HostTaskModelResponse)
    MergeFrom(*source);
  }
}

void HostTaskModelResponse::MergeFrom(const HostTaskModelResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HostTaskModelResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.taskid().size() > 0) {

    taskid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.taskid_);
  }
  if (from.modeldata().size() > 0) {

    modeldata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.modeldata_);
  }
  if (from.prefabdata().size() > 0) {

    prefabdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prefabdata_);
  }
}

void HostTaskModelResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HostTaskModelResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HostTaskModelResponse::CopyFrom(const HostTaskModelResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HostTaskModelResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HostTaskModelResponse::IsInitialized() const {
  return true;
}

void HostTaskModelResponse::Swap(HostTaskModelResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HostTaskModelResponse::InternalSwap(HostTaskModelResponse* other) {
  using std::swap;
  taskid_.Swap(&other->taskid_);
  modeldata_.Swap(&other->modeldata_);
  prefabdata_.Swap(&other->prefabdata_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HostTaskModelResponse::GetMetadata() const {
  protobuf_ResourceProtocols_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ResourceProtocols_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HostTaskStarted::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HostTaskStarted::kTaskIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HostTaskStarted::HostTaskStarted()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ResourceProtocols_2eproto::InitDefaultsHostTaskStarted();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:HostTaskStarted)
}
HostTaskStarted::HostTaskStarted(const HostTaskStarted& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  taskid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.taskid().size() > 0) {
    taskid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.taskid_);
  }
  // @@protoc_insertion_point(copy_constructor:HostTaskStarted)
}

void HostTaskStarted::SharedCtor() {
  taskid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

HostTaskStarted::~HostTaskStarted() {
  // @@protoc_insertion_point(destructor:HostTaskStarted)
  SharedDtor();
}

void HostTaskStarted::SharedDtor() {
  taskid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HostTaskStarted::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HostTaskStarted::descriptor() {
  ::protobuf_ResourceProtocols_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ResourceProtocols_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HostTaskStarted& HostTaskStarted::default_instance() {
  ::protobuf_ResourceProtocols_2eproto::InitDefaultsHostTaskStarted();
  return *internal_default_instance();
}

HostTaskStarted* HostTaskStarted::New(::google::protobuf::Arena* arena) const {
  HostTaskStarted* n = new HostTaskStarted;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HostTaskStarted::Clear() {
// @@protoc_insertion_point(message_clear_start:HostTaskStarted)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  taskid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool HostTaskStarted::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HostTaskStarted)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string taskId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_taskid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->taskid().data(), static_cast<int>(this->taskid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HostTaskStarted.taskId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HostTaskStarted)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HostTaskStarted)
  return false;
#undef DO_
}

void HostTaskStarted::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HostTaskStarted)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string taskId = 1;
  if (this->taskid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->taskid().data(), static_cast<int>(this->taskid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HostTaskStarted.taskId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->taskid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HostTaskStarted)
}

::google::protobuf::uint8* HostTaskStarted::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HostTaskStarted)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string taskId = 1;
  if (this->taskid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->taskid().data(), static_cast<int>(this->taskid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HostTaskStarted.taskId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->taskid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HostTaskStarted)
  return target;
}

size_t HostTaskStarted::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HostTaskStarted)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string taskId = 1;
  if (this->taskid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->taskid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HostTaskStarted::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HostTaskStarted)
  GOOGLE_DCHECK_NE(&from, this);
  const HostTaskStarted* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HostTaskStarted>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HostTaskStarted)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HostTaskStarted)
    MergeFrom(*source);
  }
}

void HostTaskStarted::MergeFrom(const HostTaskStarted& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HostTaskStarted)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.taskid().size() > 0) {

    taskid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.taskid_);
  }
}

void HostTaskStarted::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HostTaskStarted)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HostTaskStarted::CopyFrom(const HostTaskStarted& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HostTaskStarted)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HostTaskStarted::IsInitialized() const {
  return true;
}

void HostTaskStarted::Swap(HostTaskStarted* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HostTaskStarted::InternalSwap(HostTaskStarted* other) {
  using std::swap;
  taskid_.Swap(&other->taskid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HostTaskStarted::GetMetadata() const {
  protobuf_ResourceProtocols_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ResourceProtocols_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HostTaskFinished::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HostTaskFinished::kTaskIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HostTaskFinished::HostTaskFinished()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ResourceProtocols_2eproto::InitDefaultsHostTaskFinished();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:HostTaskFinished)
}
HostTaskFinished::HostTaskFinished(const HostTaskFinished& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  taskid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.taskid().size() > 0) {
    taskid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.taskid_);
  }
  // @@protoc_insertion_point(copy_constructor:HostTaskFinished)
}

void HostTaskFinished::SharedCtor() {
  taskid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

HostTaskFinished::~HostTaskFinished() {
  // @@protoc_insertion_point(destructor:HostTaskFinished)
  SharedDtor();
}

void HostTaskFinished::SharedDtor() {
  taskid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HostTaskFinished::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HostTaskFinished::descriptor() {
  ::protobuf_ResourceProtocols_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ResourceProtocols_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HostTaskFinished& HostTaskFinished::default_instance() {
  ::protobuf_ResourceProtocols_2eproto::InitDefaultsHostTaskFinished();
  return *internal_default_instance();
}

HostTaskFinished* HostTaskFinished::New(::google::protobuf::Arena* arena) const {
  HostTaskFinished* n = new HostTaskFinished;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HostTaskFinished::Clear() {
// @@protoc_insertion_point(message_clear_start:HostTaskFinished)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  taskid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool HostTaskFinished::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HostTaskFinished)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string taskId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_taskid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->taskid().data(), static_cast<int>(this->taskid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HostTaskFinished.taskId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HostTaskFinished)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HostTaskFinished)
  return false;
#undef DO_
}

void HostTaskFinished::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HostTaskFinished)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string taskId = 1;
  if (this->taskid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->taskid().data(), static_cast<int>(this->taskid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HostTaskFinished.taskId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->taskid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HostTaskFinished)
}

::google::protobuf::uint8* HostTaskFinished::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HostTaskFinished)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string taskId = 1;
  if (this->taskid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->taskid().data(), static_cast<int>(this->taskid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HostTaskFinished.taskId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->taskid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HostTaskFinished)
  return target;
}

size_t HostTaskFinished::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HostTaskFinished)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string taskId = 1;
  if (this->taskid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->taskid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HostTaskFinished::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HostTaskFinished)
  GOOGLE_DCHECK_NE(&from, this);
  const HostTaskFinished* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HostTaskFinished>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HostTaskFinished)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HostTaskFinished)
    MergeFrom(*source);
  }
}

void HostTaskFinished::MergeFrom(const HostTaskFinished& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HostTaskFinished)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.taskid().size() > 0) {

    taskid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.taskid_);
  }
}

void HostTaskFinished::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HostTaskFinished)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HostTaskFinished::CopyFrom(const HostTaskFinished& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HostTaskFinished)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HostTaskFinished::IsInitialized() const {
  return true;
}

void HostTaskFinished::Swap(HostTaskFinished* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HostTaskFinished::InternalSwap(HostTaskFinished* other) {
  using std::swap;
  taskid_.Swap(&other->taskid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HostTaskFinished::GetMetadata() const {
  protobuf_ResourceProtocols_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ResourceProtocols_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HostTaskProgress::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HostTaskProgress::kTaskIdFieldNumber;
const int HostTaskProgress::kProgressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HostTaskProgress::HostTaskProgress()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ResourceProtocols_2eproto::InitDefaultsHostTaskProgress();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:HostTaskProgress)
}
HostTaskProgress::HostTaskProgress(const HostTaskProgress& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  taskid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.taskid().size() > 0) {
    taskid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.taskid_);
  }
  progress_ = from.progress_;
  // @@protoc_insertion_point(copy_constructor:HostTaskProgress)
}

void HostTaskProgress::SharedCtor() {
  taskid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  progress_ = 0;
  _cached_size_ = 0;
}

HostTaskProgress::~HostTaskProgress() {
  // @@protoc_insertion_point(destructor:HostTaskProgress)
  SharedDtor();
}

void HostTaskProgress::SharedDtor() {
  taskid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HostTaskProgress::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HostTaskProgress::descriptor() {
  ::protobuf_ResourceProtocols_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ResourceProtocols_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HostTaskProgress& HostTaskProgress::default_instance() {
  ::protobuf_ResourceProtocols_2eproto::InitDefaultsHostTaskProgress();
  return *internal_default_instance();
}

HostTaskProgress* HostTaskProgress::New(::google::protobuf::Arena* arena) const {
  HostTaskProgress* n = new HostTaskProgress;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HostTaskProgress::Clear() {
// @@protoc_insertion_point(message_clear_start:HostTaskProgress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  taskid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  progress_ = 0;
  _internal_metadata_.Clear();
}

bool HostTaskProgress::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HostTaskProgress)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string taskId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_taskid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->taskid().data(), static_cast<int>(this->taskid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HostTaskProgress.taskId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float progress = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &progress_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HostTaskProgress)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HostTaskProgress)
  return false;
#undef DO_
}

void HostTaskProgress::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HostTaskProgress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string taskId = 1;
  if (this->taskid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->taskid().data(), static_cast<int>(this->taskid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HostTaskProgress.taskId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->taskid(), output);
  }

  // float progress = 2;
  if (this->progress() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->progress(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HostTaskProgress)
}

::google::protobuf::uint8* HostTaskProgress::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HostTaskProgress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string taskId = 1;
  if (this->taskid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->taskid().data(), static_cast<int>(this->taskid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HostTaskProgress.taskId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->taskid(), target);
  }

  // float progress = 2;
  if (this->progress() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->progress(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HostTaskProgress)
  return target;
}

size_t HostTaskProgress::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HostTaskProgress)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string taskId = 1;
  if (this->taskid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->taskid());
  }

  // float progress = 2;
  if (this->progress() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HostTaskProgress::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HostTaskProgress)
  GOOGLE_DCHECK_NE(&from, this);
  const HostTaskProgress* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HostTaskProgress>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HostTaskProgress)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HostTaskProgress)
    MergeFrom(*source);
  }
}

void HostTaskProgress::MergeFrom(const HostTaskProgress& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HostTaskProgress)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.taskid().size() > 0) {

    taskid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.taskid_);
  }
  if (from.progress() != 0) {
    set_progress(from.progress());
  }
}

void HostTaskProgress::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HostTaskProgress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HostTaskProgress::CopyFrom(const HostTaskProgress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HostTaskProgress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HostTaskProgress::IsInitialized() const {
  return true;
}

void HostTaskProgress::Swap(HostTaskProgress* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HostTaskProgress::InternalSwap(HostTaskProgress* other) {
  using std::swap;
  taskid_.Swap(&other->taskid_);
  swap(progress_, other->progress_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HostTaskProgress::GetMetadata() const {
  protobuf_ResourceProtocols_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ResourceProtocols_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HostTaskProgressMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HostTaskProgressMessage::kTaskIdFieldNumber;
const int HostTaskProgressMessage::kProgressFieldNumber;
const int HostTaskProgressMessage::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HostTaskProgressMessage::HostTaskProgressMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ResourceProtocols_2eproto::InitDefaultsHostTaskProgressMessage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:HostTaskProgressMessage)
}
HostTaskProgressMessage::HostTaskProgressMessage(const HostTaskProgressMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  taskid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.taskid().size() > 0) {
    taskid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.taskid_);
  }
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  progress_ = from.progress_;
  // @@protoc_insertion_point(copy_constructor:HostTaskProgressMessage)
}

void HostTaskProgressMessage::SharedCtor() {
  taskid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  progress_ = 0;
  _cached_size_ = 0;
}

HostTaskProgressMessage::~HostTaskProgressMessage() {
  // @@protoc_insertion_point(destructor:HostTaskProgressMessage)
  SharedDtor();
}

void HostTaskProgressMessage::SharedDtor() {
  taskid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HostTaskProgressMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HostTaskProgressMessage::descriptor() {
  ::protobuf_ResourceProtocols_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ResourceProtocols_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HostTaskProgressMessage& HostTaskProgressMessage::default_instance() {
  ::protobuf_ResourceProtocols_2eproto::InitDefaultsHostTaskProgressMessage();
  return *internal_default_instance();
}

HostTaskProgressMessage* HostTaskProgressMessage::New(::google::protobuf::Arena* arena) const {
  HostTaskProgressMessage* n = new HostTaskProgressMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HostTaskProgressMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:HostTaskProgressMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  taskid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  progress_ = 0;
  _internal_metadata_.Clear();
}

bool HostTaskProgressMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HostTaskProgressMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string taskId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_taskid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->taskid().data(), static_cast<int>(this->taskid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HostTaskProgressMessage.taskId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float progress = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &progress_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HostTaskProgressMessage.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HostTaskProgressMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HostTaskProgressMessage)
  return false;
#undef DO_
}

void HostTaskProgressMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HostTaskProgressMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string taskId = 1;
  if (this->taskid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->taskid().data(), static_cast<int>(this->taskid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HostTaskProgressMessage.taskId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->taskid(), output);
  }

  // float progress = 2;
  if (this->progress() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->progress(), output);
  }

  // string message = 3;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HostTaskProgressMessage.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HostTaskProgressMessage)
}

::google::protobuf::uint8* HostTaskProgressMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HostTaskProgressMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string taskId = 1;
  if (this->taskid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->taskid().data(), static_cast<int>(this->taskid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HostTaskProgressMessage.taskId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->taskid(), target);
  }

  // float progress = 2;
  if (this->progress() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->progress(), target);
  }

  // string message = 3;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HostTaskProgressMessage.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HostTaskProgressMessage)
  return target;
}

size_t HostTaskProgressMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HostTaskProgressMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string taskId = 1;
  if (this->taskid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->taskid());
  }

  // string message = 3;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // float progress = 2;
  if (this->progress() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HostTaskProgressMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HostTaskProgressMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const HostTaskProgressMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HostTaskProgressMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HostTaskProgressMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HostTaskProgressMessage)
    MergeFrom(*source);
  }
}

void HostTaskProgressMessage::MergeFrom(const HostTaskProgressMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HostTaskProgressMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.taskid().size() > 0) {

    taskid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.taskid_);
  }
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.progress() != 0) {
    set_progress(from.progress());
  }
}

void HostTaskProgressMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HostTaskProgressMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HostTaskProgressMessage::CopyFrom(const HostTaskProgressMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HostTaskProgressMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HostTaskProgressMessage::IsInitialized() const {
  return true;
}

void HostTaskProgressMessage::Swap(HostTaskProgressMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HostTaskProgressMessage::InternalSwap(HostTaskProgressMessage* other) {
  using std::swap;
  taskid_.Swap(&other->taskid_);
  message_.Swap(&other->message_);
  swap(progress_, other->progress_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HostTaskProgressMessage::GetMetadata() const {
  protobuf_ResourceProtocols_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ResourceProtocols_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProcessorTaskMessageType::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProcessorTaskMessageType::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProcessorTaskMessageType::ProcessorTaskMessageType()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ResourceProtocols_2eproto::InitDefaultsProcessorTaskMessageType();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProcessorTaskMessageType)
}
ProcessorTaskMessageType::ProcessorTaskMessageType(const ProcessorTaskMessageType& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:ProcessorTaskMessageType)
}

void ProcessorTaskMessageType::SharedCtor() {
  type_ = 0;
  _cached_size_ = 0;
}

ProcessorTaskMessageType::~ProcessorTaskMessageType() {
  // @@protoc_insertion_point(destructor:ProcessorTaskMessageType)
  SharedDtor();
}

void ProcessorTaskMessageType::SharedDtor() {
}

void ProcessorTaskMessageType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProcessorTaskMessageType::descriptor() {
  ::protobuf_ResourceProtocols_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ResourceProtocols_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProcessorTaskMessageType& ProcessorTaskMessageType::default_instance() {
  ::protobuf_ResourceProtocols_2eproto::InitDefaultsProcessorTaskMessageType();
  return *internal_default_instance();
}

ProcessorTaskMessageType* ProcessorTaskMessageType::New(::google::protobuf::Arena* arena) const {
  ProcessorTaskMessageType* n = new ProcessorTaskMessageType;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProcessorTaskMessageType::Clear() {
// @@protoc_insertion_point(message_clear_start:ProcessorTaskMessageType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_ = 0;
  _internal_metadata_.Clear();
}

bool ProcessorTaskMessageType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProcessorTaskMessageType)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ProcessorTaskMessageType.MessageType type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::ProcessorTaskMessageType_MessageType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProcessorTaskMessageType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProcessorTaskMessageType)
  return false;
#undef DO_
}

void ProcessorTaskMessageType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProcessorTaskMessageType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ProcessorTaskMessageType.MessageType type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProcessorTaskMessageType)
}

::google::protobuf::uint8* ProcessorTaskMessageType::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProcessorTaskMessageType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ProcessorTaskMessageType.MessageType type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProcessorTaskMessageType)
  return target;
}

size_t ProcessorTaskMessageType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProcessorTaskMessageType)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ProcessorTaskMessageType.MessageType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProcessorTaskMessageType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProcessorTaskMessageType)
  GOOGLE_DCHECK_NE(&from, this);
  const ProcessorTaskMessageType* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProcessorTaskMessageType>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProcessorTaskMessageType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProcessorTaskMessageType)
    MergeFrom(*source);
  }
}

void ProcessorTaskMessageType::MergeFrom(const ProcessorTaskMessageType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProcessorTaskMessageType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type() != 0) {
    set_type(from.type());
  }
}

void ProcessorTaskMessageType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProcessorTaskMessageType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProcessorTaskMessageType::CopyFrom(const ProcessorTaskMessageType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProcessorTaskMessageType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProcessorTaskMessageType::IsInitialized() const {
  return true;
}

void ProcessorTaskMessageType::Swap(ProcessorTaskMessageType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProcessorTaskMessageType::InternalSwap(ProcessorTaskMessageType* other) {
  using std::swap;
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProcessorTaskMessageType::GetMetadata() const {
  protobuf_ResourceProtocols_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ResourceProtocols_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProcessorTaskRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProcessorTaskRequest::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProcessorTaskRequest::ProcessorTaskRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ResourceProtocols_2eproto::InitDefaultsProcessorTaskRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProcessorTaskRequest)
}
ProcessorTaskRequest::ProcessorTaskRequest(const ProcessorTaskRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:ProcessorTaskRequest)
}

void ProcessorTaskRequest::SharedCtor() {
  type_ = 0;
  _cached_size_ = 0;
}

ProcessorTaskRequest::~ProcessorTaskRequest() {
  // @@protoc_insertion_point(destructor:ProcessorTaskRequest)
  SharedDtor();
}

void ProcessorTaskRequest::SharedDtor() {
}

void ProcessorTaskRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProcessorTaskRequest::descriptor() {
  ::protobuf_ResourceProtocols_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ResourceProtocols_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProcessorTaskRequest& ProcessorTaskRequest::default_instance() {
  ::protobuf_ResourceProtocols_2eproto::InitDefaultsProcessorTaskRequest();
  return *internal_default_instance();
}

ProcessorTaskRequest* ProcessorTaskRequest::New(::google::protobuf::Arena* arena) const {
  ProcessorTaskRequest* n = new ProcessorTaskRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProcessorTaskRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ProcessorTaskRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_ = 0;
  _internal_metadata_.Clear();
}

bool ProcessorTaskRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProcessorTaskRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ProcessorTaskRequest.TaskType type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::ProcessorTaskRequest_TaskType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProcessorTaskRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProcessorTaskRequest)
  return false;
#undef DO_
}

void ProcessorTaskRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProcessorTaskRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ProcessorTaskRequest.TaskType type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProcessorTaskRequest)
}

::google::protobuf::uint8* ProcessorTaskRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProcessorTaskRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ProcessorTaskRequest.TaskType type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProcessorTaskRequest)
  return target;
}

size_t ProcessorTaskRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProcessorTaskRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ProcessorTaskRequest.TaskType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProcessorTaskRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProcessorTaskRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ProcessorTaskRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProcessorTaskRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProcessorTaskRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProcessorTaskRequest)
    MergeFrom(*source);
  }
}

void ProcessorTaskRequest::MergeFrom(const ProcessorTaskRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProcessorTaskRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type() != 0) {
    set_type(from.type());
  }
}

void ProcessorTaskRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProcessorTaskRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProcessorTaskRequest::CopyFrom(const ProcessorTaskRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProcessorTaskRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProcessorTaskRequest::IsInitialized() const {
  return true;
}

void ProcessorTaskRequest::Swap(ProcessorTaskRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProcessorTaskRequest::InternalSwap(ProcessorTaskRequest* other) {
  using std::swap;
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProcessorTaskRequest::GetMetadata() const {
  protobuf_ResourceProtocols_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ResourceProtocols_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProcessorTaskImageRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProcessorTaskImageRequest::kTaskIdFieldNumber;
const int ProcessorTaskImageRequest::kSourceCMformatFieldNumber;
const int ProcessorTaskImageRequest::kTargetCMBCformatFieldNumber;
const int ProcessorTaskImageRequest::kEnginePackedFormatFieldNumber;
const int ProcessorTaskImageRequest::kWidthFieldNumber;
const int ProcessorTaskImageRequest::kHeightFieldNumber;
const int ProcessorTaskImageRequest::kStrideFieldNumber;
const int ProcessorTaskImageRequest::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProcessorTaskImageRequest::ProcessorTaskImageRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ResourceProtocols_2eproto::InitDefaultsProcessorTaskImageRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProcessorTaskImageRequest)
}
ProcessorTaskImageRequest::ProcessorTaskImageRequest(const ProcessorTaskImageRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  taskid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.taskid().size() > 0) {
    taskid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.taskid_);
  }
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  ::memcpy(&sourcecmformat_, &from.sourcecmformat_,
    static_cast<size_t>(reinterpret_cast<char*>(&stride_) -
    reinterpret_cast<char*>(&sourcecmformat_)) + sizeof(stride_));
  // @@protoc_insertion_point(copy_constructor:ProcessorTaskImageRequest)
}

void ProcessorTaskImageRequest::SharedCtor() {
  taskid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&sourcecmformat_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stride_) -
      reinterpret_cast<char*>(&sourcecmformat_)) + sizeof(stride_));
  _cached_size_ = 0;
}

ProcessorTaskImageRequest::~ProcessorTaskImageRequest() {
  // @@protoc_insertion_point(destructor:ProcessorTaskImageRequest)
  SharedDtor();
}

void ProcessorTaskImageRequest::SharedDtor() {
  taskid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ProcessorTaskImageRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProcessorTaskImageRequest::descriptor() {
  ::protobuf_ResourceProtocols_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ResourceProtocols_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProcessorTaskImageRequest& ProcessorTaskImageRequest::default_instance() {
  ::protobuf_ResourceProtocols_2eproto::InitDefaultsProcessorTaskImageRequest();
  return *internal_default_instance();
}

ProcessorTaskImageRequest* ProcessorTaskImageRequest::New(::google::protobuf::Arena* arena) const {
  ProcessorTaskImageRequest* n = new ProcessorTaskImageRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProcessorTaskImageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ProcessorTaskImageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  taskid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&sourcecmformat_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stride_) -
      reinterpret_cast<char*>(&sourcecmformat_)) + sizeof(stride_));
  _internal_metadata_.Clear();
}

bool ProcessorTaskImageRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProcessorTaskImageRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string taskId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_taskid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->taskid().data(), static_cast<int>(this->taskid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ProcessorTaskImageRequest.taskId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 sourceCMformat = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sourcecmformat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 targetCMBCformat = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &targetcmbcformat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 enginePackedFormat = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &enginepackedformat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 width = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 height = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 stride = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stride_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes data = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProcessorTaskImageRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProcessorTaskImageRequest)
  return false;
#undef DO_
}

void ProcessorTaskImageRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProcessorTaskImageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string taskId = 1;
  if (this->taskid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->taskid().data(), static_cast<int>(this->taskid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProcessorTaskImageRequest.taskId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->taskid(), output);
  }

  // int32 sourceCMformat = 2;
  if (this->sourcecmformat() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->sourcecmformat(), output);
  }

  // int32 targetCMBCformat = 3;
  if (this->targetcmbcformat() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->targetcmbcformat(), output);
  }

  // int32 enginePackedFormat = 4;
  if (this->enginepackedformat() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->enginepackedformat(), output);
  }

  // int32 width = 5;
  if (this->width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->width(), output);
  }

  // int32 height = 6;
  if (this->height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->height(), output);
  }

  // int32 stride = 7;
  if (this->stride() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->stride(), output);
  }

  // bytes data = 8;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      8, this->data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProcessorTaskImageRequest)
}

::google::protobuf::uint8* ProcessorTaskImageRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProcessorTaskImageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string taskId = 1;
  if (this->taskid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->taskid().data(), static_cast<int>(this->taskid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProcessorTaskImageRequest.taskId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->taskid(), target);
  }

  // int32 sourceCMformat = 2;
  if (this->sourcecmformat() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->sourcecmformat(), target);
  }

  // int32 targetCMBCformat = 3;
  if (this->targetcmbcformat() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->targetcmbcformat(), target);
  }

  // int32 enginePackedFormat = 4;
  if (this->enginepackedformat() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->enginepackedformat(), target);
  }

  // int32 width = 5;
  if (this->width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->width(), target);
  }

  // int32 height = 6;
  if (this->height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->height(), target);
  }

  // int32 stride = 7;
  if (this->stride() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->stride(), target);
  }

  // bytes data = 8;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        8, this->data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProcessorTaskImageRequest)
  return target;
}

size_t ProcessorTaskImageRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProcessorTaskImageRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string taskId = 1;
  if (this->taskid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->taskid());
  }

  // bytes data = 8;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  // int32 sourceCMformat = 2;
  if (this->sourcecmformat() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sourcecmformat());
  }

  // int32 targetCMBCformat = 3;
  if (this->targetcmbcformat() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->targetcmbcformat());
  }

  // int32 enginePackedFormat = 4;
  if (this->enginepackedformat() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->enginepackedformat());
  }

  // int32 width = 5;
  if (this->width() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->width());
  }

  // int32 height = 6;
  if (this->height() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->height());
  }

  // int32 stride = 7;
  if (this->stride() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->stride());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProcessorTaskImageRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProcessorTaskImageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ProcessorTaskImageRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProcessorTaskImageRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProcessorTaskImageRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProcessorTaskImageRequest)
    MergeFrom(*source);
  }
}

void ProcessorTaskImageRequest::MergeFrom(const ProcessorTaskImageRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProcessorTaskImageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.taskid().size() > 0) {

    taskid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.taskid_);
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.sourcecmformat() != 0) {
    set_sourcecmformat(from.sourcecmformat());
  }
  if (from.targetcmbcformat() != 0) {
    set_targetcmbcformat(from.targetcmbcformat());
  }
  if (from.enginepackedformat() != 0) {
    set_enginepackedformat(from.enginepackedformat());
  }
  if (from.width() != 0) {
    set_width(from.width());
  }
  if (from.height() != 0) {
    set_height(from.height());
  }
  if (from.stride() != 0) {
    set_stride(from.stride());
  }
}

void ProcessorTaskImageRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProcessorTaskImageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProcessorTaskImageRequest::CopyFrom(const ProcessorTaskImageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProcessorTaskImageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProcessorTaskImageRequest::IsInitialized() const {
  return true;
}

void ProcessorTaskImageRequest::Swap(ProcessorTaskImageRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProcessorTaskImageRequest::InternalSwap(ProcessorTaskImageRequest* other) {
  using std::swap;
  taskid_.Swap(&other->taskid_);
  data_.Swap(&other->data_);
  swap(sourcecmformat_, other->sourcecmformat_);
  swap(targetcmbcformat_, other->targetcmbcformat_);
  swap(enginepackedformat_, other->enginepackedformat_);
  swap(width_, other->width_);
  swap(height_, other->height_);
  swap(stride_, other->stride_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProcessorTaskImageRequest::GetMetadata() const {
  protobuf_ResourceProtocols_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ResourceProtocols_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProcessorTaskImageResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProcessorTaskImageResponse::kTaskIdFieldNumber;
const int ProcessorTaskImageResponse::kWidthFieldNumber;
const int ProcessorTaskImageResponse::kHeightFieldNumber;
const int ProcessorTaskImageResponse::kFormatFieldNumber;
const int ProcessorTaskImageResponse::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProcessorTaskImageResponse::ProcessorTaskImageResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ResourceProtocols_2eproto::InitDefaultsProcessorTaskImageResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProcessorTaskImageResponse)
}
ProcessorTaskImageResponse::ProcessorTaskImageResponse(const ProcessorTaskImageResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  taskid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.taskid().size() > 0) {
    taskid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.taskid_);
  }
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  ::memcpy(&width_, &from.width_,
    static_cast<size_t>(reinterpret_cast<char*>(&format_) -
    reinterpret_cast<char*>(&width_)) + sizeof(format_));
  // @@protoc_insertion_point(copy_constructor:ProcessorTaskImageResponse)
}

void ProcessorTaskImageResponse::SharedCtor() {
  taskid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&width_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&format_) -
      reinterpret_cast<char*>(&width_)) + sizeof(format_));
  _cached_size_ = 0;
}

ProcessorTaskImageResponse::~ProcessorTaskImageResponse() {
  // @@protoc_insertion_point(destructor:ProcessorTaskImageResponse)
  SharedDtor();
}

void ProcessorTaskImageResponse::SharedDtor() {
  taskid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ProcessorTaskImageResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProcessorTaskImageResponse::descriptor() {
  ::protobuf_ResourceProtocols_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ResourceProtocols_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProcessorTaskImageResponse& ProcessorTaskImageResponse::default_instance() {
  ::protobuf_ResourceProtocols_2eproto::InitDefaultsProcessorTaskImageResponse();
  return *internal_default_instance();
}

ProcessorTaskImageResponse* ProcessorTaskImageResponse::New(::google::protobuf::Arena* arena) const {
  ProcessorTaskImageResponse* n = new ProcessorTaskImageResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProcessorTaskImageResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ProcessorTaskImageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  taskid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&width_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&format_) -
      reinterpret_cast<char*>(&width_)) + sizeof(format_));
  _internal_metadata_.Clear();
}

bool ProcessorTaskImageResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProcessorTaskImageResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string taskId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_taskid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->taskid().data(), static_cast<int>(this->taskid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ProcessorTaskImageResponse.taskId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 width = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 height = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 format = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &format_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes data = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProcessorTaskImageResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProcessorTaskImageResponse)
  return false;
#undef DO_
}

void ProcessorTaskImageResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProcessorTaskImageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string taskId = 1;
  if (this->taskid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->taskid().data(), static_cast<int>(this->taskid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProcessorTaskImageResponse.taskId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->taskid(), output);
  }

  // int32 width = 2;
  if (this->width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->width(), output);
  }

  // int32 height = 3;
  if (this->height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->height(), output);
  }

  // int32 format = 4;
  if (this->format() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->format(), output);
  }

  // bytes data = 5;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProcessorTaskImageResponse)
}

::google::protobuf::uint8* ProcessorTaskImageResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProcessorTaskImageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string taskId = 1;
  if (this->taskid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->taskid().data(), static_cast<int>(this->taskid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProcessorTaskImageResponse.taskId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->taskid(), target);
  }

  // int32 width = 2;
  if (this->width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->width(), target);
  }

  // int32 height = 3;
  if (this->height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->height(), target);
  }

  // int32 format = 4;
  if (this->format() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->format(), target);
  }

  // bytes data = 5;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProcessorTaskImageResponse)
  return target;
}

size_t ProcessorTaskImageResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProcessorTaskImageResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string taskId = 1;
  if (this->taskid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->taskid());
  }

  // bytes data = 5;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  // int32 width = 2;
  if (this->width() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->width());
  }

  // int32 height = 3;
  if (this->height() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->height());
  }

  // int32 format = 4;
  if (this->format() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->format());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProcessorTaskImageResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProcessorTaskImageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ProcessorTaskImageResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProcessorTaskImageResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProcessorTaskImageResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProcessorTaskImageResponse)
    MergeFrom(*source);
  }
}

void ProcessorTaskImageResponse::MergeFrom(const ProcessorTaskImageResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProcessorTaskImageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.taskid().size() > 0) {

    taskid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.taskid_);
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.width() != 0) {
    set_width(from.width());
  }
  if (from.height() != 0) {
    set_height(from.height());
  }
  if (from.format() != 0) {
    set_format(from.format());
  }
}

void ProcessorTaskImageResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProcessorTaskImageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProcessorTaskImageResponse::CopyFrom(const ProcessorTaskImageResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProcessorTaskImageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProcessorTaskImageResponse::IsInitialized() const {
  return true;
}

void ProcessorTaskImageResponse::Swap(ProcessorTaskImageResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProcessorTaskImageResponse::InternalSwap(ProcessorTaskImageResponse* other) {
  using std::swap;
  taskid_.Swap(&other->taskid_);
  data_.Swap(&other->data_);
  swap(width_, other->width_);
  swap(height_, other->height_);
  swap(format_, other->format_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProcessorTaskImageResponse::GetMetadata() const {
  protobuf_ResourceProtocols_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ResourceProtocols_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProcessorTaskProgress::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProcessorTaskProgress::kTaskIdFieldNumber;
const int ProcessorTaskProgress::kProgressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProcessorTaskProgress::ProcessorTaskProgress()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ResourceProtocols_2eproto::InitDefaultsProcessorTaskProgress();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProcessorTaskProgress)
}
ProcessorTaskProgress::ProcessorTaskProgress(const ProcessorTaskProgress& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  taskid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.taskid().size() > 0) {
    taskid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.taskid_);
  }
  progress_ = from.progress_;
  // @@protoc_insertion_point(copy_constructor:ProcessorTaskProgress)
}

void ProcessorTaskProgress::SharedCtor() {
  taskid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  progress_ = 0;
  _cached_size_ = 0;
}

ProcessorTaskProgress::~ProcessorTaskProgress() {
  // @@protoc_insertion_point(destructor:ProcessorTaskProgress)
  SharedDtor();
}

void ProcessorTaskProgress::SharedDtor() {
  taskid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ProcessorTaskProgress::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProcessorTaskProgress::descriptor() {
  ::protobuf_ResourceProtocols_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ResourceProtocols_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProcessorTaskProgress& ProcessorTaskProgress::default_instance() {
  ::protobuf_ResourceProtocols_2eproto::InitDefaultsProcessorTaskProgress();
  return *internal_default_instance();
}

ProcessorTaskProgress* ProcessorTaskProgress::New(::google::protobuf::Arena* arena) const {
  ProcessorTaskProgress* n = new ProcessorTaskProgress;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProcessorTaskProgress::Clear() {
// @@protoc_insertion_point(message_clear_start:ProcessorTaskProgress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  taskid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  progress_ = 0;
  _internal_metadata_.Clear();
}

bool ProcessorTaskProgress::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProcessorTaskProgress)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string taskId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_taskid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->taskid().data(), static_cast<int>(this->taskid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ProcessorTaskProgress.taskId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float progress = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &progress_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProcessorTaskProgress)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProcessorTaskProgress)
  return false;
#undef DO_
}

void ProcessorTaskProgress::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProcessorTaskProgress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string taskId = 1;
  if (this->taskid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->taskid().data(), static_cast<int>(this->taskid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProcessorTaskProgress.taskId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->taskid(), output);
  }

  // float progress = 2;
  if (this->progress() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->progress(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProcessorTaskProgress)
}

::google::protobuf::uint8* ProcessorTaskProgress::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProcessorTaskProgress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string taskId = 1;
  if (this->taskid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->taskid().data(), static_cast<int>(this->taskid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProcessorTaskProgress.taskId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->taskid(), target);
  }

  // float progress = 2;
  if (this->progress() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->progress(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProcessorTaskProgress)
  return target;
}

size_t ProcessorTaskProgress::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProcessorTaskProgress)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string taskId = 1;
  if (this->taskid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->taskid());
  }

  // float progress = 2;
  if (this->progress() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProcessorTaskProgress::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProcessorTaskProgress)
  GOOGLE_DCHECK_NE(&from, this);
  const ProcessorTaskProgress* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProcessorTaskProgress>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProcessorTaskProgress)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProcessorTaskProgress)
    MergeFrom(*source);
  }
}

void ProcessorTaskProgress::MergeFrom(const ProcessorTaskProgress& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProcessorTaskProgress)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.taskid().size() > 0) {

    taskid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.taskid_);
  }
  if (from.progress() != 0) {
    set_progress(from.progress());
  }
}

void ProcessorTaskProgress::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProcessorTaskProgress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProcessorTaskProgress::CopyFrom(const ProcessorTaskProgress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProcessorTaskProgress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProcessorTaskProgress::IsInitialized() const {
  return true;
}

void ProcessorTaskProgress::Swap(ProcessorTaskProgress* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProcessorTaskProgress::InternalSwap(ProcessorTaskProgress* other) {
  using std::swap;
  taskid_.Swap(&other->taskid_);
  swap(progress_, other->progress_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProcessorTaskProgress::GetMetadata() const {
  protobuf_ResourceProtocols_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ResourceProtocols_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProcessorTaskMessageProgress::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProcessorTaskMessageProgress::kTaskIdFieldNumber;
const int ProcessorTaskMessageProgress::kProgressFieldNumber;
const int ProcessorTaskMessageProgress::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProcessorTaskMessageProgress::ProcessorTaskMessageProgress()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ResourceProtocols_2eproto::InitDefaultsProcessorTaskMessageProgress();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProcessorTaskMessageProgress)
}
ProcessorTaskMessageProgress::ProcessorTaskMessageProgress(const ProcessorTaskMessageProgress& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  taskid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.taskid().size() > 0) {
    taskid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.taskid_);
  }
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  progress_ = from.progress_;
  // @@protoc_insertion_point(copy_constructor:ProcessorTaskMessageProgress)
}

void ProcessorTaskMessageProgress::SharedCtor() {
  taskid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  progress_ = 0;
  _cached_size_ = 0;
}

ProcessorTaskMessageProgress::~ProcessorTaskMessageProgress() {
  // @@protoc_insertion_point(destructor:ProcessorTaskMessageProgress)
  SharedDtor();
}

void ProcessorTaskMessageProgress::SharedDtor() {
  taskid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ProcessorTaskMessageProgress::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProcessorTaskMessageProgress::descriptor() {
  ::protobuf_ResourceProtocols_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ResourceProtocols_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProcessorTaskMessageProgress& ProcessorTaskMessageProgress::default_instance() {
  ::protobuf_ResourceProtocols_2eproto::InitDefaultsProcessorTaskMessageProgress();
  return *internal_default_instance();
}

ProcessorTaskMessageProgress* ProcessorTaskMessageProgress::New(::google::protobuf::Arena* arena) const {
  ProcessorTaskMessageProgress* n = new ProcessorTaskMessageProgress;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProcessorTaskMessageProgress::Clear() {
// @@protoc_insertion_point(message_clear_start:ProcessorTaskMessageProgress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  taskid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  progress_ = 0;
  _internal_metadata_.Clear();
}

bool ProcessorTaskMessageProgress::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProcessorTaskMessageProgress)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string taskId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_taskid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->taskid().data(), static_cast<int>(this->taskid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ProcessorTaskMessageProgress.taskId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float progress = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &progress_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ProcessorTaskMessageProgress.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProcessorTaskMessageProgress)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProcessorTaskMessageProgress)
  return false;
#undef DO_
}

void ProcessorTaskMessageProgress::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProcessorTaskMessageProgress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string taskId = 1;
  if (this->taskid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->taskid().data(), static_cast<int>(this->taskid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProcessorTaskMessageProgress.taskId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->taskid(), output);
  }

  // float progress = 2;
  if (this->progress() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->progress(), output);
  }

  // string message = 3;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProcessorTaskMessageProgress.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProcessorTaskMessageProgress)
}

::google::protobuf::uint8* ProcessorTaskMessageProgress::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProcessorTaskMessageProgress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string taskId = 1;
  if (this->taskid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->taskid().data(), static_cast<int>(this->taskid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProcessorTaskMessageProgress.taskId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->taskid(), target);
  }

  // float progress = 2;
  if (this->progress() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->progress(), target);
  }

  // string message = 3;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProcessorTaskMessageProgress.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProcessorTaskMessageProgress)
  return target;
}

size_t ProcessorTaskMessageProgress::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProcessorTaskMessageProgress)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string taskId = 1;
  if (this->taskid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->taskid());
  }

  // string message = 3;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // float progress = 2;
  if (this->progress() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProcessorTaskMessageProgress::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProcessorTaskMessageProgress)
  GOOGLE_DCHECK_NE(&from, this);
  const ProcessorTaskMessageProgress* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProcessorTaskMessageProgress>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProcessorTaskMessageProgress)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProcessorTaskMessageProgress)
    MergeFrom(*source);
  }
}

void ProcessorTaskMessageProgress::MergeFrom(const ProcessorTaskMessageProgress& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProcessorTaskMessageProgress)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.taskid().size() > 0) {

    taskid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.taskid_);
  }
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.progress() != 0) {
    set_progress(from.progress());
  }
}

void ProcessorTaskMessageProgress::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProcessorTaskMessageProgress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProcessorTaskMessageProgress::CopyFrom(const ProcessorTaskMessageProgress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProcessorTaskMessageProgress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProcessorTaskMessageProgress::IsInitialized() const {
  return true;
}

void ProcessorTaskMessageProgress::Swap(ProcessorTaskMessageProgress* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProcessorTaskMessageProgress::InternalSwap(ProcessorTaskMessageProgress* other) {
  using std::swap;
  taskid_.Swap(&other->taskid_);
  message_.Swap(&other->message_);
  swap(progress_, other->progress_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProcessorTaskMessageProgress::GetMetadata() const {
  protobuf_ResourceProtocols_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ResourceProtocols_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProcessorTaskModelRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProcessorTaskModelRequest::kTaskIdFieldNumber;
const int ProcessorTaskModelRequest::kModelTargetPathFieldNumber;
const int ProcessorTaskModelRequest::kAssetNameFieldNumber;
const int ProcessorTaskModelRequest::kScaleXFieldNumber;
const int ProcessorTaskModelRequest::kScaleYFieldNumber;
const int ProcessorTaskModelRequest::kScaleZFieldNumber;
const int ProcessorTaskModelRequest::kRotationXFieldNumber;
const int ProcessorTaskModelRequest::kRotationYFieldNumber;
const int ProcessorTaskModelRequest::kRotationZFieldNumber;
const int ProcessorTaskModelRequest::kRotationWFieldNumber;
const int ProcessorTaskModelRequest::kModelDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProcessorTaskModelRequest::ProcessorTaskModelRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ResourceProtocols_2eproto::InitDefaultsProcessorTaskModelRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProcessorTaskModelRequest)
}
ProcessorTaskModelRequest::ProcessorTaskModelRequest(const ProcessorTaskModelRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  taskid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.taskid().size() > 0) {
    taskid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.taskid_);
  }
  modeltargetpath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.modeltargetpath().size() > 0) {
    modeltargetpath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.modeltargetpath_);
  }
  assetname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.assetname().size() > 0) {
    assetname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.assetname_);
  }
  modeldata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.modeldata().size() > 0) {
    modeldata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.modeldata_);
  }
  ::memcpy(&scalex_, &from.scalex_,
    static_cast<size_t>(reinterpret_cast<char*>(&rotationw_) -
    reinterpret_cast<char*>(&scalex_)) + sizeof(rotationw_));
  // @@protoc_insertion_point(copy_constructor:ProcessorTaskModelRequest)
}

void ProcessorTaskModelRequest::SharedCtor() {
  taskid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  modeltargetpath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  assetname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  modeldata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&scalex_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rotationw_) -
      reinterpret_cast<char*>(&scalex_)) + sizeof(rotationw_));
  _cached_size_ = 0;
}

ProcessorTaskModelRequest::~ProcessorTaskModelRequest() {
  // @@protoc_insertion_point(destructor:ProcessorTaskModelRequest)
  SharedDtor();
}

void ProcessorTaskModelRequest::SharedDtor() {
  taskid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  modeltargetpath_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  assetname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  modeldata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ProcessorTaskModelRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProcessorTaskModelRequest::descriptor() {
  ::protobuf_ResourceProtocols_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ResourceProtocols_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProcessorTaskModelRequest& ProcessorTaskModelRequest::default_instance() {
  ::protobuf_ResourceProtocols_2eproto::InitDefaultsProcessorTaskModelRequest();
  return *internal_default_instance();
}

ProcessorTaskModelRequest* ProcessorTaskModelRequest::New(::google::protobuf::Arena* arena) const {
  ProcessorTaskModelRequest* n = new ProcessorTaskModelRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProcessorTaskModelRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ProcessorTaskModelRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  taskid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  modeltargetpath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  assetname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  modeldata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&scalex_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rotationw_) -
      reinterpret_cast<char*>(&scalex_)) + sizeof(rotationw_));
  _internal_metadata_.Clear();
}

bool ProcessorTaskModelRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProcessorTaskModelRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string taskId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_taskid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->taskid().data(), static_cast<int>(this->taskid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ProcessorTaskModelRequest.taskId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string modelTargetPath = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_modeltargetpath()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->modeltargetpath().data(), static_cast<int>(this->modeltargetpath().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ProcessorTaskModelRequest.modelTargetPath"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string assetName = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_assetname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->assetname().data(), static_cast<int>(this->assetname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ProcessorTaskModelRequest.assetName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float scaleX = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &scalex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float scaleY = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &scaley_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float scaleZ = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &scalez_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float rotationX = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &rotationx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float rotationY = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(69u /* 69 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &rotationy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float rotationZ = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &rotationz_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float rotationW = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(85u /* 85 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &rotationw_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes modelData = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_modeldata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProcessorTaskModelRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProcessorTaskModelRequest)
  return false;
#undef DO_
}

void ProcessorTaskModelRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProcessorTaskModelRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string taskId = 1;
  if (this->taskid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->taskid().data(), static_cast<int>(this->taskid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProcessorTaskModelRequest.taskId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->taskid(), output);
  }

  // string modelTargetPath = 2;
  if (this->modeltargetpath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->modeltargetpath().data(), static_cast<int>(this->modeltargetpath().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProcessorTaskModelRequest.modelTargetPath");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->modeltargetpath(), output);
  }

  // string assetName = 3;
  if (this->assetname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->assetname().data(), static_cast<int>(this->assetname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProcessorTaskModelRequest.assetName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->assetname(), output);
  }

  // float scaleX = 4;
  if (this->scalex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->scalex(), output);
  }

  // float scaleY = 5;
  if (this->scaley() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->scaley(), output);
  }

  // float scaleZ = 6;
  if (this->scalez() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->scalez(), output);
  }

  // float rotationX = 7;
  if (this->rotationx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->rotationx(), output);
  }

  // float rotationY = 8;
  if (this->rotationy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->rotationy(), output);
  }

  // float rotationZ = 9;
  if (this->rotationz() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->rotationz(), output);
  }

  // float rotationW = 10;
  if (this->rotationw() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(10, this->rotationw(), output);
  }

  // bytes modelData = 11;
  if (this->modeldata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      11, this->modeldata(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProcessorTaskModelRequest)
}

::google::protobuf::uint8* ProcessorTaskModelRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProcessorTaskModelRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string taskId = 1;
  if (this->taskid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->taskid().data(), static_cast<int>(this->taskid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProcessorTaskModelRequest.taskId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->taskid(), target);
  }

  // string modelTargetPath = 2;
  if (this->modeltargetpath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->modeltargetpath().data(), static_cast<int>(this->modeltargetpath().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProcessorTaskModelRequest.modelTargetPath");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->modeltargetpath(), target);
  }

  // string assetName = 3;
  if (this->assetname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->assetname().data(), static_cast<int>(this->assetname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProcessorTaskModelRequest.assetName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->assetname(), target);
  }

  // float scaleX = 4;
  if (this->scalex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->scalex(), target);
  }

  // float scaleY = 5;
  if (this->scaley() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->scaley(), target);
  }

  // float scaleZ = 6;
  if (this->scalez() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->scalez(), target);
  }

  // float rotationX = 7;
  if (this->rotationx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->rotationx(), target);
  }

  // float rotationY = 8;
  if (this->rotationy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->rotationy(), target);
  }

  // float rotationZ = 9;
  if (this->rotationz() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->rotationz(), target);
  }

  // float rotationW = 10;
  if (this->rotationw() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(10, this->rotationw(), target);
  }

  // bytes modelData = 11;
  if (this->modeldata().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        11, this->modeldata(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProcessorTaskModelRequest)
  return target;
}

size_t ProcessorTaskModelRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProcessorTaskModelRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string taskId = 1;
  if (this->taskid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->taskid());
  }

  // string modelTargetPath = 2;
  if (this->modeltargetpath().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->modeltargetpath());
  }

  // string assetName = 3;
  if (this->assetname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->assetname());
  }

  // bytes modelData = 11;
  if (this->modeldata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->modeldata());
  }

  // float scaleX = 4;
  if (this->scalex() != 0) {
    total_size += 1 + 4;
  }

  // float scaleY = 5;
  if (this->scaley() != 0) {
    total_size += 1 + 4;
  }

  // float scaleZ = 6;
  if (this->scalez() != 0) {
    total_size += 1 + 4;
  }

  // float rotationX = 7;
  if (this->rotationx() != 0) {
    total_size += 1 + 4;
  }

  // float rotationY = 8;
  if (this->rotationy() != 0) {
    total_size += 1 + 4;
  }

  // float rotationZ = 9;
  if (this->rotationz() != 0) {
    total_size += 1 + 4;
  }

  // float rotationW = 10;
  if (this->rotationw() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProcessorTaskModelRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProcessorTaskModelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ProcessorTaskModelRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProcessorTaskModelRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProcessorTaskModelRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProcessorTaskModelRequest)
    MergeFrom(*source);
  }
}

void ProcessorTaskModelRequest::MergeFrom(const ProcessorTaskModelRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProcessorTaskModelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.taskid().size() > 0) {

    taskid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.taskid_);
  }
  if (from.modeltargetpath().size() > 0) {

    modeltargetpath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.modeltargetpath_);
  }
  if (from.assetname().size() > 0) {

    assetname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.assetname_);
  }
  if (from.modeldata().size() > 0) {

    modeldata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.modeldata_);
  }
  if (from.scalex() != 0) {
    set_scalex(from.scalex());
  }
  if (from.scaley() != 0) {
    set_scaley(from.scaley());
  }
  if (from.scalez() != 0) {
    set_scalez(from.scalez());
  }
  if (from.rotationx() != 0) {
    set_rotationx(from.rotationx());
  }
  if (from.rotationy() != 0) {
    set_rotationy(from.rotationy());
  }
  if (from.rotationz() != 0) {
    set_rotationz(from.rotationz());
  }
  if (from.rotationw() != 0) {
    set_rotationw(from.rotationw());
  }
}

void ProcessorTaskModelRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProcessorTaskModelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProcessorTaskModelRequest::CopyFrom(const ProcessorTaskModelRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProcessorTaskModelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProcessorTaskModelRequest::IsInitialized() const {
  return true;
}

void ProcessorTaskModelRequest::Swap(ProcessorTaskModelRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProcessorTaskModelRequest::InternalSwap(ProcessorTaskModelRequest* other) {
  using std::swap;
  taskid_.Swap(&other->taskid_);
  modeltargetpath_.Swap(&other->modeltargetpath_);
  assetname_.Swap(&other->assetname_);
  modeldata_.Swap(&other->modeldata_);
  swap(scalex_, other->scalex_);
  swap(scaley_, other->scaley_);
  swap(scalez_, other->scalez_);
  swap(rotationx_, other->rotationx_);
  swap(rotationy_, other->rotationy_);
  swap(rotationz_, other->rotationz_);
  swap(rotationw_, other->rotationw_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProcessorTaskModelRequest::GetMetadata() const {
  protobuf_ResourceProtocols_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ResourceProtocols_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProcessorTaskModelResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProcessorTaskModelResponse::kTaskIdFieldNumber;
const int ProcessorTaskModelResponse::kModelDataFieldNumber;
const int ProcessorTaskModelResponse::kPrefabDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProcessorTaskModelResponse::ProcessorTaskModelResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ResourceProtocols_2eproto::InitDefaultsProcessorTaskModelResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProcessorTaskModelResponse)
}
ProcessorTaskModelResponse::ProcessorTaskModelResponse(const ProcessorTaskModelResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  taskid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.taskid().size() > 0) {
    taskid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.taskid_);
  }
  modeldata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.modeldata().size() > 0) {
    modeldata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.modeldata_);
  }
  prefabdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.prefabdata().size() > 0) {
    prefabdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prefabdata_);
  }
  // @@protoc_insertion_point(copy_constructor:ProcessorTaskModelResponse)
}

void ProcessorTaskModelResponse::SharedCtor() {
  taskid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  modeldata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prefabdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ProcessorTaskModelResponse::~ProcessorTaskModelResponse() {
  // @@protoc_insertion_point(destructor:ProcessorTaskModelResponse)
  SharedDtor();
}

void ProcessorTaskModelResponse::SharedDtor() {
  taskid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  modeldata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prefabdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ProcessorTaskModelResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProcessorTaskModelResponse::descriptor() {
  ::protobuf_ResourceProtocols_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ResourceProtocols_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProcessorTaskModelResponse& ProcessorTaskModelResponse::default_instance() {
  ::protobuf_ResourceProtocols_2eproto::InitDefaultsProcessorTaskModelResponse();
  return *internal_default_instance();
}

ProcessorTaskModelResponse* ProcessorTaskModelResponse::New(::google::protobuf::Arena* arena) const {
  ProcessorTaskModelResponse* n = new ProcessorTaskModelResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProcessorTaskModelResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ProcessorTaskModelResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  taskid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  modeldata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prefabdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ProcessorTaskModelResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProcessorTaskModelResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string taskId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_taskid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->taskid().data(), static_cast<int>(this->taskid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ProcessorTaskModelResponse.taskId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes modelData = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_modeldata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes prefabData = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_prefabdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProcessorTaskModelResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProcessorTaskModelResponse)
  return false;
#undef DO_
}

void ProcessorTaskModelResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProcessorTaskModelResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string taskId = 1;
  if (this->taskid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->taskid().data(), static_cast<int>(this->taskid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProcessorTaskModelResponse.taskId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->taskid(), output);
  }

  // bytes modelData = 2;
  if (this->modeldata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->modeldata(), output);
  }

  // bytes prefabData = 3;
  if (this->prefabdata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->prefabdata(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProcessorTaskModelResponse)
}

::google::protobuf::uint8* ProcessorTaskModelResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProcessorTaskModelResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string taskId = 1;
  if (this->taskid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->taskid().data(), static_cast<int>(this->taskid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProcessorTaskModelResponse.taskId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->taskid(), target);
  }

  // bytes modelData = 2;
  if (this->modeldata().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->modeldata(), target);
  }

  // bytes prefabData = 3;
  if (this->prefabdata().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->prefabdata(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProcessorTaskModelResponse)
  return target;
}

size_t ProcessorTaskModelResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProcessorTaskModelResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string taskId = 1;
  if (this->taskid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->taskid());
  }

  // bytes modelData = 2;
  if (this->modeldata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->modeldata());
  }

  // bytes prefabData = 3;
  if (this->prefabdata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->prefabdata());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProcessorTaskModelResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProcessorTaskModelResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ProcessorTaskModelResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProcessorTaskModelResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProcessorTaskModelResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProcessorTaskModelResponse)
    MergeFrom(*source);
  }
}

void ProcessorTaskModelResponse::MergeFrom(const ProcessorTaskModelResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProcessorTaskModelResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.taskid().size() > 0) {

    taskid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.taskid_);
  }
  if (from.modeldata().size() > 0) {

    modeldata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.modeldata_);
  }
  if (from.prefabdata().size() > 0) {

    prefabdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prefabdata_);
  }
}

void ProcessorTaskModelResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProcessorTaskModelResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProcessorTaskModelResponse::CopyFrom(const ProcessorTaskModelResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProcessorTaskModelResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProcessorTaskModelResponse::IsInitialized() const {
  return true;
}

void ProcessorTaskModelResponse::Swap(ProcessorTaskModelResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProcessorTaskModelResponse::InternalSwap(ProcessorTaskModelResponse* other) {
  using std::swap;
  taskid_.Swap(&other->taskid_);
  modeldata_.Swap(&other->modeldata_);
  prefabdata_.Swap(&other->prefabdata_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProcessorTaskModelResponse::GetMetadata() const {
  protobuf_ResourceProtocols_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ResourceProtocols_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
